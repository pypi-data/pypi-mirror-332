# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: nillion/values/v1/store.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import List

import betterproto

from ....payments.v1 import receipt as ___payments_v1_receipt__
from ....permissions.v1 import permissions as ___permissions_v1_permissions__
from .. import value as _value__


@dataclass(eq=False, repr=False)
class StoreValuesRequest(betterproto.Message):
    """A request to store a set of values."""

    signed_receipt: "___payments_v1_receipt__.SignedReceipt" = (
        betterproto.message_field(1)
    )
    """
    The receipt that proves this operation was paid for.
    
     The receipt must be for a `StoreValues` operation.
    """

    permissions: "___permissions_v1_permissions__.Permissions" = (
        betterproto.message_field(3)
    )
    """
    The permissions to set for these values.
    
     Permissions are required when storing values and optional when updating them. That is,
     if `update_identifier` is set then this attribute is optional.
    """

    update_identifier: bytes = betterproto.bytes_field(4)
    """
    The optional values identifier to use when storing these values.
    
     The given identifier must be a valid values identifier that the invoking user has update permissions
     on for this operation to be considered valid.
    
     Setting this identifier will effectively turn this operation into an update for an existing set of
     values.
    """

    values: List["_value__.NamedValue"] = betterproto.message_field(5)
    """The values to be stored."""


@dataclass(eq=False, repr=False)
class StoreValuesResponse(betterproto.Message):
    """A response to a request to store values the network."""

    values_id: bytes = betterproto.bytes_field(1)
    """The identifier of the store values."""
