# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: nillion/auth/v1/token.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from datetime import datetime

import betterproto

from ....membership.v1 import cluster as ___membership_v1_cluster__
from .. import public_key as _public_key__


@dataclass(eq=False, repr=False)
class SignedToken(betterproto.Message):
    """A signed authentication token."""

    serialized_token: bytes = betterproto.bytes_field(1)
    """A `Token` serialized into bytes."""

    public_key: "_public_key__.PublicKey" = betterproto.message_field(2)
    """The public key for the private key this token is signed with."""

    signature: bytes = betterproto.bytes_field(3)
    """
    The serialized token signature.
    
     The signature must be generated using the private key corresponding to the `public_key` field
     over `sha256(serialized_token)`.
    """


@dataclass(eq=False, repr=False)
class Token(betterproto.Message):
    """A token."""

    nonce: bytes = betterproto.bytes_field(1)
    """
    A nonce that adds entropy to this token.
    
     The nonce must be 32 bytes long and will be considered invalid otherwise.
    """

    target_identity: "___membership_v1_cluster__.NodeId" = betterproto.message_field(2)
    """
    The identifier of the node this token is meant to be used against.
    
     This needs to match the target node's identity for the token to be considered valid, and is used to prevent
     a node from taking the token and impersonating the user.
    """

    expires_at: datetime = betterproto.message_field(3)
    """The timestamp at which this token expires."""
