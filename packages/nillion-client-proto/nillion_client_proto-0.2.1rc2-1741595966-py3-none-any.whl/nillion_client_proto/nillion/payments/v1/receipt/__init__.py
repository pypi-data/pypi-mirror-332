# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: nillion/payments/v1/receipt.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from datetime import datetime
from typing import List

import betterproto
import betterproto.lib.google.protobuf as betterproto_lib_google_protobuf

from ....preprocessing.v1 import (
    element as ___preprocessing_v1_element__,
    material as ___preprocessing_v1_material__,
)
from .. import quote as _quote__


@dataclass(eq=False, repr=False)
class PaymentReceiptRequest(betterproto.Message):
    """A request to get a payment receipt for a paid operation."""

    signed_quote: "_quote__.SignedQuote" = betterproto.message_field(1)
    """The quote that the user paid for."""

    tx_hash: str = betterproto.string_field(2)
    """
    The nilchain transaction hash that proves this payment was made.
    
     Not setting this field indicates the payment should be subtracted from the user's account balance.
    """


@dataclass(eq=False, repr=False)
class SignedReceipt(betterproto.Message):
    """A signed receipt that indicates the user paid."""

    receipt: bytes = betterproto.bytes_field(1)
    """The serialized `Receipt`."""

    signature: bytes = betterproto.bytes_field(2)
    """The signature for this receipt."""


@dataclass(eq=False, repr=False)
class Receipt(betterproto.Message):
    """A receipt for an operation that the user paid for."""

    identifier: bytes = betterproto.bytes_field(1)
    """
    A unique identifier for this operation.
    
     This allows nodes to independently identify this operation and ensure no receipt is used more than once.
    """

    metadata: "OperationMetadata" = betterproto.message_field(2)
    """The metadata for this receipt;"""

    expires_at: datetime = betterproto.message_field(3)
    """
    The point in time at which this receipt expires and can no longer be used to invoke the associated
     operation in the network.
    """


@dataclass(eq=False, repr=False)
class OperationMetadata(betterproto.Message):
    """The metadata associated with the operation this receipt is for."""

    pool_status: "betterproto_lib_google_protobuf.Empty" = betterproto.message_field(
        1, group="operation"
    )
    """A preprocessing pool status operation."""

    store_program: "_quote__.StoreProgram" = betterproto.message_field(
        2, group="operation"
    )
    """A store program operation."""

    retrieve_values: "_quote__.RetrieveValues" = betterproto.message_field(
        3, group="operation"
    )
    """A retrieve values operation."""

    retrieve_permissions: "_quote__.RetrievePermissions" = betterproto.message_field(
        4, group="operation"
    )
    """A retrieve permissions operation."""

    store_values: "_quote__.StoreValues" = betterproto.message_field(
        5, group="operation"
    )
    """A store values operation."""

    invoke_compute: "InvokeComputeMetadata" = betterproto.message_field(
        6, group="operation"
    )
    """An invoke compute operation."""

    overwrite_permissions: "_quote__.OverwritePermissions" = betterproto.message_field(
        7, group="operation"
    )
    """An overwrite permissions operation."""

    update_permissions: "_quote__.UpdatePermissions" = betterproto.message_field(
        8, group="operation"
    )
    """An update permissions operation."""


@dataclass(eq=False, repr=False)
class InvokeComputeMetadata(betterproto.Message):
    """The metadata for an invoke compute operation."""

    quote: "_quote__.InvokeCompute" = betterproto.message_field(1)
    """The invoke compute quote."""

    offsets: List["SelectedPreprocessingOffsets"] = betterproto.message_field(2)
    """The selected preprocessing offsets for this operation."""

    auxiliary_materials: List["SelectedAuxiliaryMaterial"] = betterproto.message_field(
        3
    )
    """The auxiliary material needed for this operation."""


@dataclass(eq=False, repr=False)
class SelectedPreprocessingOffsets(betterproto.Message):
    """
    The selected offsets for a preprocessing element.

     This is closed-open set, e.g. [start, end)
    """

    element: "___preprocessing_v1_element__.PreprocessingElement" = (
        betterproto.enum_field(1)
    )
    """The preprocessing element."""

    start: int = betterproto.uint64_field(2)
    """The first offset in the range."""

    end: int = betterproto.uint64_field(3)
    """The one-past-the-end offset in this range."""

    batch_size: int = betterproto.uint64_field(4)
    """The size of all batches involved in the selected range."""


@dataclass(eq=False, repr=False)
class SelectedAuxiliaryMaterial(betterproto.Message):
    """The selected auxiliary material."""

    material: "___preprocessing_v1_material__.AuxiliaryMaterial" = (
        betterproto.enum_field(1)
    )
    """The material type."""

    version: int = betterproto.uint32_field(2)
    """the material version."""
