# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _GenericLabelInterpolatorPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkLabelImageGenericInterpolateImageFunctionPython
else:
    import _itkLabelImageGenericInterpolateImageFunctionPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkRGBAPixelPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkImagePython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkIndexPython
import itk.itkImageRegionPython
import itk.itkInterpolateImageFunctionPython
import itk.itkImageFunctionBasePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkContinuousIndexPython
import itk.itkFunctionBasePython
import itk.itkArrayPython

def itkLabelImageGenericInterpolateImageFunctionID2Linear_New():
    return itkLabelImageGenericInterpolateImageFunctionID2Linear.New()

class itkLabelImageGenericInterpolateImageFunctionID2Linear(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID2D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionID2Linear class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionID2Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionID2Linear___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionID2Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionID2Linear_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionID2Linear

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionID2Linear

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionID2Linear_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionID2Linear

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionID2Linear and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionID2Linear.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionID2Linear.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionID2Linear.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionID2Linear in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionID2Linear_swigregister(itkLabelImageGenericInterpolateImageFunctionID2Linear)

def itkLabelImageGenericInterpolateImageFunctionID2NearestNeighbor_New():
    return itkLabelImageGenericInterpolateImageFunctionID2NearestNeighbor.New()

class itkLabelImageGenericInterpolateImageFunctionID2NearestNeighbor(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID2D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionID2NearestNeighbor class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionID2NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionID2NearestNeighbor___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionID2NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionID2NearestNeighbor_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionID2NearestNeighbor

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionID2NearestNeighbor

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionID2NearestNeighbor_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionID2NearestNeighbor

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionID2NearestNeighbor and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionID2NearestNeighbor.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionID2NearestNeighbor.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionID2NearestNeighbor.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionID2NearestNeighbor in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionID2NearestNeighbor_swigregister(itkLabelImageGenericInterpolateImageFunctionID2NearestNeighbor)

def itkLabelImageGenericInterpolateImageFunctionID3Linear_New():
    return itkLabelImageGenericInterpolateImageFunctionID3Linear.New()

class itkLabelImageGenericInterpolateImageFunctionID3Linear(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID3D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionID3Linear class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionID3Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionID3Linear___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionID3Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionID3Linear_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionID3Linear

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionID3Linear

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionID3Linear_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionID3Linear

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionID3Linear and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionID3Linear.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionID3Linear.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionID3Linear.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionID3Linear in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionID3Linear_swigregister(itkLabelImageGenericInterpolateImageFunctionID3Linear)

def itkLabelImageGenericInterpolateImageFunctionID3NearestNeighbor_New():
    return itkLabelImageGenericInterpolateImageFunctionID3NearestNeighbor.New()

class itkLabelImageGenericInterpolateImageFunctionID3NearestNeighbor(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID3D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionID3NearestNeighbor class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionID3NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionID3NearestNeighbor___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionID3NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionID3NearestNeighbor_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionID3NearestNeighbor

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionID3NearestNeighbor

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionID3NearestNeighbor_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionID3NearestNeighbor

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionID3NearestNeighbor and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionID3NearestNeighbor.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionID3NearestNeighbor.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionID3NearestNeighbor.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionID3NearestNeighbor in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionID3NearestNeighbor_swigregister(itkLabelImageGenericInterpolateImageFunctionID3NearestNeighbor)

def itkLabelImageGenericInterpolateImageFunctionID4Linear_New():
    return itkLabelImageGenericInterpolateImageFunctionID4Linear.New()

class itkLabelImageGenericInterpolateImageFunctionID4Linear(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID4D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionID4Linear class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionID4Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionID4Linear___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionID4Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionID4Linear_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionID4Linear

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionID4Linear

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionID4Linear_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionID4Linear

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionID4Linear and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionID4Linear.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionID4Linear.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionID4Linear.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionID4Linear in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionID4Linear_swigregister(itkLabelImageGenericInterpolateImageFunctionID4Linear)

def itkLabelImageGenericInterpolateImageFunctionID4NearestNeighbor_New():
    return itkLabelImageGenericInterpolateImageFunctionID4NearestNeighbor.New()

class itkLabelImageGenericInterpolateImageFunctionID4NearestNeighbor(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID4D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionID4NearestNeighbor class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionID4NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionID4NearestNeighbor___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionID4NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionID4NearestNeighbor_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionID4NearestNeighbor

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionID4NearestNeighbor

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionID4NearestNeighbor_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionID4NearestNeighbor

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionID4NearestNeighbor and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionID4NearestNeighbor.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionID4NearestNeighbor.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionID4NearestNeighbor.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionID4NearestNeighbor in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionID4NearestNeighbor_swigregister(itkLabelImageGenericInterpolateImageFunctionID4NearestNeighbor)

def itkLabelImageGenericInterpolateImageFunctionIF2Linear_New():
    return itkLabelImageGenericInterpolateImageFunctionIF2Linear.New()

class itkLabelImageGenericInterpolateImageFunctionIF2Linear(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF2D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIF2Linear class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIF2Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIF2Linear___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIF2Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIF2Linear_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIF2Linear

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIF2Linear

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIF2Linear_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIF2Linear

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIF2Linear and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIF2Linear.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIF2Linear.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIF2Linear.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIF2Linear in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIF2Linear_swigregister(itkLabelImageGenericInterpolateImageFunctionIF2Linear)

def itkLabelImageGenericInterpolateImageFunctionIF2NearestNeighbor_New():
    return itkLabelImageGenericInterpolateImageFunctionIF2NearestNeighbor.New()

class itkLabelImageGenericInterpolateImageFunctionIF2NearestNeighbor(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF2D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIF2NearestNeighbor class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIF2NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIF2NearestNeighbor___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIF2NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIF2NearestNeighbor_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIF2NearestNeighbor

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIF2NearestNeighbor

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIF2NearestNeighbor_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIF2NearestNeighbor

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIF2NearestNeighbor and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIF2NearestNeighbor.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIF2NearestNeighbor.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIF2NearestNeighbor.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIF2NearestNeighbor in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIF2NearestNeighbor_swigregister(itkLabelImageGenericInterpolateImageFunctionIF2NearestNeighbor)

def itkLabelImageGenericInterpolateImageFunctionIF3Linear_New():
    return itkLabelImageGenericInterpolateImageFunctionIF3Linear.New()

class itkLabelImageGenericInterpolateImageFunctionIF3Linear(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF3D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIF3Linear class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIF3Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIF3Linear___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIF3Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIF3Linear_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIF3Linear

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIF3Linear

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIF3Linear_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIF3Linear

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIF3Linear and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIF3Linear.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIF3Linear.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIF3Linear.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIF3Linear in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIF3Linear_swigregister(itkLabelImageGenericInterpolateImageFunctionIF3Linear)

def itkLabelImageGenericInterpolateImageFunctionIF3NearestNeighbor_New():
    return itkLabelImageGenericInterpolateImageFunctionIF3NearestNeighbor.New()

class itkLabelImageGenericInterpolateImageFunctionIF3NearestNeighbor(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF3D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIF3NearestNeighbor class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIF3NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIF3NearestNeighbor___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIF3NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIF3NearestNeighbor_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIF3NearestNeighbor

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIF3NearestNeighbor

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIF3NearestNeighbor_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIF3NearestNeighbor

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIF3NearestNeighbor and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIF3NearestNeighbor.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIF3NearestNeighbor.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIF3NearestNeighbor.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIF3NearestNeighbor in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIF3NearestNeighbor_swigregister(itkLabelImageGenericInterpolateImageFunctionIF3NearestNeighbor)

def itkLabelImageGenericInterpolateImageFunctionIF4Linear_New():
    return itkLabelImageGenericInterpolateImageFunctionIF4Linear.New()

class itkLabelImageGenericInterpolateImageFunctionIF4Linear(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF4D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIF4Linear class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIF4Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIF4Linear___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIF4Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIF4Linear_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIF4Linear

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIF4Linear

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIF4Linear_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIF4Linear

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIF4Linear and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIF4Linear.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIF4Linear.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIF4Linear.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIF4Linear in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIF4Linear_swigregister(itkLabelImageGenericInterpolateImageFunctionIF4Linear)

def itkLabelImageGenericInterpolateImageFunctionIF4NearestNeighbor_New():
    return itkLabelImageGenericInterpolateImageFunctionIF4NearestNeighbor.New()

class itkLabelImageGenericInterpolateImageFunctionIF4NearestNeighbor(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF4D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIF4NearestNeighbor class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIF4NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIF4NearestNeighbor___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIF4NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIF4NearestNeighbor_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIF4NearestNeighbor

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIF4NearestNeighbor

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIF4NearestNeighbor_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIF4NearestNeighbor

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIF4NearestNeighbor and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIF4NearestNeighbor.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIF4NearestNeighbor.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIF4NearestNeighbor.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIF4NearestNeighbor in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIF4NearestNeighbor_swigregister(itkLabelImageGenericInterpolateImageFunctionIF4NearestNeighbor)

def itkLabelImageGenericInterpolateImageFunctionIRGBAUC2Linear_New():
    return itkLabelImageGenericInterpolateImageFunctionIRGBAUC2Linear.New()

class itkLabelImageGenericInterpolateImageFunctionIRGBAUC2Linear(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBAUC2D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIRGBAUC2Linear class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIRGBAUC2Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBAUC2Linear___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIRGBAUC2Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBAUC2Linear_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIRGBAUC2Linear

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIRGBAUC2Linear

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBAUC2Linear_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIRGBAUC2Linear

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIRGBAUC2Linear and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIRGBAUC2Linear.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIRGBAUC2Linear.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIRGBAUC2Linear.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIRGBAUC2Linear in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBAUC2Linear_swigregister(itkLabelImageGenericInterpolateImageFunctionIRGBAUC2Linear)

def itkLabelImageGenericInterpolateImageFunctionIRGBAUC2NearestNeighbor_New():
    return itkLabelImageGenericInterpolateImageFunctionIRGBAUC2NearestNeighbor.New()

class itkLabelImageGenericInterpolateImageFunctionIRGBAUC2NearestNeighbor(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBAUC2D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIRGBAUC2NearestNeighbor class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIRGBAUC2NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBAUC2NearestNeighbor___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIRGBAUC2NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBAUC2NearestNeighbor_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIRGBAUC2NearestNeighbor

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIRGBAUC2NearestNeighbor

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBAUC2NearestNeighbor_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIRGBAUC2NearestNeighbor

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIRGBAUC2NearestNeighbor and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIRGBAUC2NearestNeighbor.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIRGBAUC2NearestNeighbor.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIRGBAUC2NearestNeighbor.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIRGBAUC2NearestNeighbor in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBAUC2NearestNeighbor_swigregister(itkLabelImageGenericInterpolateImageFunctionIRGBAUC2NearestNeighbor)

def itkLabelImageGenericInterpolateImageFunctionIRGBAUC3Linear_New():
    return itkLabelImageGenericInterpolateImageFunctionIRGBAUC3Linear.New()

class itkLabelImageGenericInterpolateImageFunctionIRGBAUC3Linear(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBAUC3D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIRGBAUC3Linear class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIRGBAUC3Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBAUC3Linear___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIRGBAUC3Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBAUC3Linear_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIRGBAUC3Linear

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIRGBAUC3Linear

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBAUC3Linear_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIRGBAUC3Linear

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIRGBAUC3Linear and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIRGBAUC3Linear.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIRGBAUC3Linear.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIRGBAUC3Linear.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIRGBAUC3Linear in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBAUC3Linear_swigregister(itkLabelImageGenericInterpolateImageFunctionIRGBAUC3Linear)

def itkLabelImageGenericInterpolateImageFunctionIRGBAUC3NearestNeighbor_New():
    return itkLabelImageGenericInterpolateImageFunctionIRGBAUC3NearestNeighbor.New()

class itkLabelImageGenericInterpolateImageFunctionIRGBAUC3NearestNeighbor(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBAUC3D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIRGBAUC3NearestNeighbor class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIRGBAUC3NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBAUC3NearestNeighbor___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIRGBAUC3NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBAUC3NearestNeighbor_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIRGBAUC3NearestNeighbor

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIRGBAUC3NearestNeighbor

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBAUC3NearestNeighbor_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIRGBAUC3NearestNeighbor

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIRGBAUC3NearestNeighbor and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIRGBAUC3NearestNeighbor.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIRGBAUC3NearestNeighbor.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIRGBAUC3NearestNeighbor.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIRGBAUC3NearestNeighbor in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBAUC3NearestNeighbor_swigregister(itkLabelImageGenericInterpolateImageFunctionIRGBAUC3NearestNeighbor)

def itkLabelImageGenericInterpolateImageFunctionIRGBAUC4Linear_New():
    return itkLabelImageGenericInterpolateImageFunctionIRGBAUC4Linear.New()

class itkLabelImageGenericInterpolateImageFunctionIRGBAUC4Linear(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBAUC4D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIRGBAUC4Linear class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIRGBAUC4Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBAUC4Linear___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIRGBAUC4Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBAUC4Linear_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIRGBAUC4Linear

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIRGBAUC4Linear

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBAUC4Linear_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIRGBAUC4Linear

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIRGBAUC4Linear and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIRGBAUC4Linear.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIRGBAUC4Linear.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIRGBAUC4Linear.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIRGBAUC4Linear in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBAUC4Linear_swigregister(itkLabelImageGenericInterpolateImageFunctionIRGBAUC4Linear)

def itkLabelImageGenericInterpolateImageFunctionIRGBAUC4NearestNeighbor_New():
    return itkLabelImageGenericInterpolateImageFunctionIRGBAUC4NearestNeighbor.New()

class itkLabelImageGenericInterpolateImageFunctionIRGBAUC4NearestNeighbor(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBAUC4D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIRGBAUC4NearestNeighbor class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIRGBAUC4NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBAUC4NearestNeighbor___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIRGBAUC4NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBAUC4NearestNeighbor_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIRGBAUC4NearestNeighbor

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIRGBAUC4NearestNeighbor

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBAUC4NearestNeighbor_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIRGBAUC4NearestNeighbor

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIRGBAUC4NearestNeighbor and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIRGBAUC4NearestNeighbor.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIRGBAUC4NearestNeighbor.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIRGBAUC4NearestNeighbor.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIRGBAUC4NearestNeighbor in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBAUC4NearestNeighbor_swigregister(itkLabelImageGenericInterpolateImageFunctionIRGBAUC4NearestNeighbor)

def itkLabelImageGenericInterpolateImageFunctionIRGBUC2Linear_New():
    return itkLabelImageGenericInterpolateImageFunctionIRGBUC2Linear.New()

class itkLabelImageGenericInterpolateImageFunctionIRGBUC2Linear(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBUC2D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIRGBUC2Linear class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIRGBUC2Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBUC2Linear___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIRGBUC2Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBUC2Linear_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIRGBUC2Linear

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIRGBUC2Linear

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBUC2Linear_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIRGBUC2Linear

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIRGBUC2Linear and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIRGBUC2Linear.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIRGBUC2Linear.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIRGBUC2Linear.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIRGBUC2Linear in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBUC2Linear_swigregister(itkLabelImageGenericInterpolateImageFunctionIRGBUC2Linear)

def itkLabelImageGenericInterpolateImageFunctionIRGBUC2NearestNeighbor_New():
    return itkLabelImageGenericInterpolateImageFunctionIRGBUC2NearestNeighbor.New()

class itkLabelImageGenericInterpolateImageFunctionIRGBUC2NearestNeighbor(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBUC2D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIRGBUC2NearestNeighbor class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIRGBUC2NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBUC2NearestNeighbor___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIRGBUC2NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBUC2NearestNeighbor_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIRGBUC2NearestNeighbor

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIRGBUC2NearestNeighbor

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBUC2NearestNeighbor_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIRGBUC2NearestNeighbor

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIRGBUC2NearestNeighbor and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIRGBUC2NearestNeighbor.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIRGBUC2NearestNeighbor.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIRGBUC2NearestNeighbor.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIRGBUC2NearestNeighbor in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBUC2NearestNeighbor_swigregister(itkLabelImageGenericInterpolateImageFunctionIRGBUC2NearestNeighbor)

def itkLabelImageGenericInterpolateImageFunctionIRGBUC3Linear_New():
    return itkLabelImageGenericInterpolateImageFunctionIRGBUC3Linear.New()

class itkLabelImageGenericInterpolateImageFunctionIRGBUC3Linear(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBUC3D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIRGBUC3Linear class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIRGBUC3Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBUC3Linear___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIRGBUC3Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBUC3Linear_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIRGBUC3Linear

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIRGBUC3Linear

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBUC3Linear_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIRGBUC3Linear

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIRGBUC3Linear and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIRGBUC3Linear.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIRGBUC3Linear.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIRGBUC3Linear.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIRGBUC3Linear in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBUC3Linear_swigregister(itkLabelImageGenericInterpolateImageFunctionIRGBUC3Linear)

def itkLabelImageGenericInterpolateImageFunctionIRGBUC3NearestNeighbor_New():
    return itkLabelImageGenericInterpolateImageFunctionIRGBUC3NearestNeighbor.New()

class itkLabelImageGenericInterpolateImageFunctionIRGBUC3NearestNeighbor(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBUC3D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIRGBUC3NearestNeighbor class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIRGBUC3NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBUC3NearestNeighbor___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIRGBUC3NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBUC3NearestNeighbor_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIRGBUC3NearestNeighbor

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIRGBUC3NearestNeighbor

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBUC3NearestNeighbor_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIRGBUC3NearestNeighbor

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIRGBUC3NearestNeighbor and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIRGBUC3NearestNeighbor.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIRGBUC3NearestNeighbor.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIRGBUC3NearestNeighbor.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIRGBUC3NearestNeighbor in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBUC3NearestNeighbor_swigregister(itkLabelImageGenericInterpolateImageFunctionIRGBUC3NearestNeighbor)

def itkLabelImageGenericInterpolateImageFunctionIRGBUC4Linear_New():
    return itkLabelImageGenericInterpolateImageFunctionIRGBUC4Linear.New()

class itkLabelImageGenericInterpolateImageFunctionIRGBUC4Linear(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBUC4D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIRGBUC4Linear class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIRGBUC4Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBUC4Linear___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIRGBUC4Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBUC4Linear_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIRGBUC4Linear

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIRGBUC4Linear

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBUC4Linear_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIRGBUC4Linear

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIRGBUC4Linear and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIRGBUC4Linear.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIRGBUC4Linear.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIRGBUC4Linear.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIRGBUC4Linear in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBUC4Linear_swigregister(itkLabelImageGenericInterpolateImageFunctionIRGBUC4Linear)

def itkLabelImageGenericInterpolateImageFunctionIRGBUC4NearestNeighbor_New():
    return itkLabelImageGenericInterpolateImageFunctionIRGBUC4NearestNeighbor.New()

class itkLabelImageGenericInterpolateImageFunctionIRGBUC4NearestNeighbor(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBUC4D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIRGBUC4NearestNeighbor class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIRGBUC4NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBUC4NearestNeighbor___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIRGBUC4NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBUC4NearestNeighbor_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIRGBUC4NearestNeighbor

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIRGBUC4NearestNeighbor

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBUC4NearestNeighbor_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIRGBUC4NearestNeighbor

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIRGBUC4NearestNeighbor and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIRGBUC4NearestNeighbor.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIRGBUC4NearestNeighbor.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIRGBUC4NearestNeighbor.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIRGBUC4NearestNeighbor in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIRGBUC4NearestNeighbor_swigregister(itkLabelImageGenericInterpolateImageFunctionIRGBUC4NearestNeighbor)

def itkLabelImageGenericInterpolateImageFunctionISS2Linear_New():
    return itkLabelImageGenericInterpolateImageFunctionISS2Linear.New()

class itkLabelImageGenericInterpolateImageFunctionISS2Linear(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS2D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionISS2Linear class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionISS2Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionISS2Linear___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionISS2Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionISS2Linear_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionISS2Linear

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionISS2Linear

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionISS2Linear_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionISS2Linear

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionISS2Linear and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionISS2Linear.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionISS2Linear.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionISS2Linear.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionISS2Linear in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionISS2Linear_swigregister(itkLabelImageGenericInterpolateImageFunctionISS2Linear)

def itkLabelImageGenericInterpolateImageFunctionISS2NearestNeighbor_New():
    return itkLabelImageGenericInterpolateImageFunctionISS2NearestNeighbor.New()

class itkLabelImageGenericInterpolateImageFunctionISS2NearestNeighbor(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS2D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionISS2NearestNeighbor class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionISS2NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionISS2NearestNeighbor___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionISS2NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionISS2NearestNeighbor_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionISS2NearestNeighbor

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionISS2NearestNeighbor

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionISS2NearestNeighbor_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionISS2NearestNeighbor

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionISS2NearestNeighbor and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionISS2NearestNeighbor.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionISS2NearestNeighbor.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionISS2NearestNeighbor.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionISS2NearestNeighbor in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionISS2NearestNeighbor_swigregister(itkLabelImageGenericInterpolateImageFunctionISS2NearestNeighbor)

def itkLabelImageGenericInterpolateImageFunctionISS3Linear_New():
    return itkLabelImageGenericInterpolateImageFunctionISS3Linear.New()

class itkLabelImageGenericInterpolateImageFunctionISS3Linear(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS3D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionISS3Linear class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionISS3Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionISS3Linear___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionISS3Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionISS3Linear_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionISS3Linear

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionISS3Linear

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionISS3Linear_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionISS3Linear

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionISS3Linear and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionISS3Linear.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionISS3Linear.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionISS3Linear.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionISS3Linear in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionISS3Linear_swigregister(itkLabelImageGenericInterpolateImageFunctionISS3Linear)

def itkLabelImageGenericInterpolateImageFunctionISS3NearestNeighbor_New():
    return itkLabelImageGenericInterpolateImageFunctionISS3NearestNeighbor.New()

class itkLabelImageGenericInterpolateImageFunctionISS3NearestNeighbor(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS3D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionISS3NearestNeighbor class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionISS3NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionISS3NearestNeighbor___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionISS3NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionISS3NearestNeighbor_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionISS3NearestNeighbor

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionISS3NearestNeighbor

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionISS3NearestNeighbor_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionISS3NearestNeighbor

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionISS3NearestNeighbor and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionISS3NearestNeighbor.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionISS3NearestNeighbor.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionISS3NearestNeighbor.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionISS3NearestNeighbor in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionISS3NearestNeighbor_swigregister(itkLabelImageGenericInterpolateImageFunctionISS3NearestNeighbor)

def itkLabelImageGenericInterpolateImageFunctionISS4Linear_New():
    return itkLabelImageGenericInterpolateImageFunctionISS4Linear.New()

class itkLabelImageGenericInterpolateImageFunctionISS4Linear(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS4D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionISS4Linear class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionISS4Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionISS4Linear___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionISS4Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionISS4Linear_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionISS4Linear

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionISS4Linear

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionISS4Linear_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionISS4Linear

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionISS4Linear and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionISS4Linear.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionISS4Linear.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionISS4Linear.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionISS4Linear in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionISS4Linear_swigregister(itkLabelImageGenericInterpolateImageFunctionISS4Linear)

def itkLabelImageGenericInterpolateImageFunctionISS4NearestNeighbor_New():
    return itkLabelImageGenericInterpolateImageFunctionISS4NearestNeighbor.New()

class itkLabelImageGenericInterpolateImageFunctionISS4NearestNeighbor(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS4D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionISS4NearestNeighbor class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionISS4NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionISS4NearestNeighbor___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionISS4NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionISS4NearestNeighbor_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionISS4NearestNeighbor

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionISS4NearestNeighbor

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionISS4NearestNeighbor_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionISS4NearestNeighbor

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionISS4NearestNeighbor and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionISS4NearestNeighbor.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionISS4NearestNeighbor.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionISS4NearestNeighbor.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionISS4NearestNeighbor in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionISS4NearestNeighbor_swigregister(itkLabelImageGenericInterpolateImageFunctionISS4NearestNeighbor)

def itkLabelImageGenericInterpolateImageFunctionIUC2Linear_New():
    return itkLabelImageGenericInterpolateImageFunctionIUC2Linear.New()

class itkLabelImageGenericInterpolateImageFunctionIUC2Linear(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC2D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIUC2Linear class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIUC2Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUC2Linear___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIUC2Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUC2Linear_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIUC2Linear

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIUC2Linear

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUC2Linear_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIUC2Linear

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIUC2Linear and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIUC2Linear.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIUC2Linear.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIUC2Linear.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIUC2Linear in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUC2Linear_swigregister(itkLabelImageGenericInterpolateImageFunctionIUC2Linear)

def itkLabelImageGenericInterpolateImageFunctionIUC2NearestNeighbor_New():
    return itkLabelImageGenericInterpolateImageFunctionIUC2NearestNeighbor.New()

class itkLabelImageGenericInterpolateImageFunctionIUC2NearestNeighbor(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC2D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIUC2NearestNeighbor class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIUC2NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUC2NearestNeighbor___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIUC2NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUC2NearestNeighbor_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIUC2NearestNeighbor

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIUC2NearestNeighbor

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUC2NearestNeighbor_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIUC2NearestNeighbor

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIUC2NearestNeighbor and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIUC2NearestNeighbor.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIUC2NearestNeighbor.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIUC2NearestNeighbor.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIUC2NearestNeighbor in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUC2NearestNeighbor_swigregister(itkLabelImageGenericInterpolateImageFunctionIUC2NearestNeighbor)

def itkLabelImageGenericInterpolateImageFunctionIUC3Linear_New():
    return itkLabelImageGenericInterpolateImageFunctionIUC3Linear.New()

class itkLabelImageGenericInterpolateImageFunctionIUC3Linear(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC3D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIUC3Linear class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIUC3Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUC3Linear___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIUC3Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUC3Linear_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIUC3Linear

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIUC3Linear

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUC3Linear_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIUC3Linear

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIUC3Linear and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIUC3Linear.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIUC3Linear.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIUC3Linear.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIUC3Linear in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUC3Linear_swigregister(itkLabelImageGenericInterpolateImageFunctionIUC3Linear)

def itkLabelImageGenericInterpolateImageFunctionIUC3NearestNeighbor_New():
    return itkLabelImageGenericInterpolateImageFunctionIUC3NearestNeighbor.New()

class itkLabelImageGenericInterpolateImageFunctionIUC3NearestNeighbor(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC3D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIUC3NearestNeighbor class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIUC3NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUC3NearestNeighbor___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIUC3NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUC3NearestNeighbor_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIUC3NearestNeighbor

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIUC3NearestNeighbor

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUC3NearestNeighbor_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIUC3NearestNeighbor

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIUC3NearestNeighbor and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIUC3NearestNeighbor.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIUC3NearestNeighbor.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIUC3NearestNeighbor.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIUC3NearestNeighbor in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUC3NearestNeighbor_swigregister(itkLabelImageGenericInterpolateImageFunctionIUC3NearestNeighbor)

def itkLabelImageGenericInterpolateImageFunctionIUC4Linear_New():
    return itkLabelImageGenericInterpolateImageFunctionIUC4Linear.New()

class itkLabelImageGenericInterpolateImageFunctionIUC4Linear(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC4D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIUC4Linear class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIUC4Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUC4Linear___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIUC4Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUC4Linear_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIUC4Linear

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIUC4Linear

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUC4Linear_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIUC4Linear

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIUC4Linear and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIUC4Linear.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIUC4Linear.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIUC4Linear.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIUC4Linear in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUC4Linear_swigregister(itkLabelImageGenericInterpolateImageFunctionIUC4Linear)

def itkLabelImageGenericInterpolateImageFunctionIUC4NearestNeighbor_New():
    return itkLabelImageGenericInterpolateImageFunctionIUC4NearestNeighbor.New()

class itkLabelImageGenericInterpolateImageFunctionIUC4NearestNeighbor(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC4D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIUC4NearestNeighbor class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIUC4NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUC4NearestNeighbor___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIUC4NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUC4NearestNeighbor_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIUC4NearestNeighbor

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIUC4NearestNeighbor

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUC4NearestNeighbor_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIUC4NearestNeighbor

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIUC4NearestNeighbor and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIUC4NearestNeighbor.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIUC4NearestNeighbor.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIUC4NearestNeighbor.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIUC4NearestNeighbor in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUC4NearestNeighbor_swigregister(itkLabelImageGenericInterpolateImageFunctionIUC4NearestNeighbor)

def itkLabelImageGenericInterpolateImageFunctionIUS2Linear_New():
    return itkLabelImageGenericInterpolateImageFunctionIUS2Linear.New()

class itkLabelImageGenericInterpolateImageFunctionIUS2Linear(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS2D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIUS2Linear class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIUS2Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUS2Linear___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIUS2Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUS2Linear_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIUS2Linear

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIUS2Linear

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUS2Linear_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIUS2Linear

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIUS2Linear and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIUS2Linear.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIUS2Linear.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIUS2Linear.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIUS2Linear in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUS2Linear_swigregister(itkLabelImageGenericInterpolateImageFunctionIUS2Linear)

def itkLabelImageGenericInterpolateImageFunctionIUS2NearestNeighbor_New():
    return itkLabelImageGenericInterpolateImageFunctionIUS2NearestNeighbor.New()

class itkLabelImageGenericInterpolateImageFunctionIUS2NearestNeighbor(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS2D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIUS2NearestNeighbor class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIUS2NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUS2NearestNeighbor___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIUS2NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUS2NearestNeighbor_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIUS2NearestNeighbor

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIUS2NearestNeighbor

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUS2NearestNeighbor_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIUS2NearestNeighbor

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIUS2NearestNeighbor and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIUS2NearestNeighbor.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIUS2NearestNeighbor.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIUS2NearestNeighbor.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIUS2NearestNeighbor in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUS2NearestNeighbor_swigregister(itkLabelImageGenericInterpolateImageFunctionIUS2NearestNeighbor)

def itkLabelImageGenericInterpolateImageFunctionIUS3Linear_New():
    return itkLabelImageGenericInterpolateImageFunctionIUS3Linear.New()

class itkLabelImageGenericInterpolateImageFunctionIUS3Linear(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS3D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIUS3Linear class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIUS3Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUS3Linear___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIUS3Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUS3Linear_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIUS3Linear

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIUS3Linear

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUS3Linear_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIUS3Linear

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIUS3Linear and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIUS3Linear.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIUS3Linear.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIUS3Linear.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIUS3Linear in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUS3Linear_swigregister(itkLabelImageGenericInterpolateImageFunctionIUS3Linear)

def itkLabelImageGenericInterpolateImageFunctionIUS3NearestNeighbor_New():
    return itkLabelImageGenericInterpolateImageFunctionIUS3NearestNeighbor.New()

class itkLabelImageGenericInterpolateImageFunctionIUS3NearestNeighbor(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS3D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIUS3NearestNeighbor class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIUS3NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUS3NearestNeighbor___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIUS3NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUS3NearestNeighbor_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIUS3NearestNeighbor

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIUS3NearestNeighbor

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUS3NearestNeighbor_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIUS3NearestNeighbor

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIUS3NearestNeighbor and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIUS3NearestNeighbor.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIUS3NearestNeighbor.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIUS3NearestNeighbor.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIUS3NearestNeighbor in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUS3NearestNeighbor_swigregister(itkLabelImageGenericInterpolateImageFunctionIUS3NearestNeighbor)

def itkLabelImageGenericInterpolateImageFunctionIUS4Linear_New():
    return itkLabelImageGenericInterpolateImageFunctionIUS4Linear.New()

class itkLabelImageGenericInterpolateImageFunctionIUS4Linear(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS4D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIUS4Linear class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIUS4Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUS4Linear___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIUS4Linear_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUS4Linear_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIUS4Linear

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIUS4Linear

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUS4Linear_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIUS4Linear

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIUS4Linear and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIUS4Linear.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIUS4Linear.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIUS4Linear.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIUS4Linear in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUS4Linear_swigregister(itkLabelImageGenericInterpolateImageFunctionIUS4Linear)

def itkLabelImageGenericInterpolateImageFunctionIUS4NearestNeighbor_New():
    return itkLabelImageGenericInterpolateImageFunctionIUS4NearestNeighbor.New()

class itkLabelImageGenericInterpolateImageFunctionIUS4NearestNeighbor(itk.itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS4D):
    r"""Proxy of C++ itkLabelImageGenericInterpolateImageFunctionIUS4NearestNeighbor class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageGenericInterpolateImageFunctionIUS4NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUS4NearestNeighbor___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageGenericInterpolateImageFunctionIUS4NearestNeighbor_Pointer"""
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUS4NearestNeighbor_Clone(self)
    __swig_destroy__ = _itkLabelImageGenericInterpolateImageFunctionPython.delete_itkLabelImageGenericInterpolateImageFunctionIUS4NearestNeighbor

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageGenericInterpolateImageFunctionIUS4NearestNeighbor

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUS4NearestNeighbor_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageGenericInterpolateImageFunctionIUS4NearestNeighbor

        Create a new object of the class itkLabelImageGenericInterpolateImageFunctionIUS4NearestNeighbor and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageGenericInterpolateImageFunctionIUS4NearestNeighbor.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageGenericInterpolateImageFunctionIUS4NearestNeighbor.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageGenericInterpolateImageFunctionIUS4NearestNeighbor.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageGenericInterpolateImageFunctionIUS4NearestNeighbor in _itkLabelImageGenericInterpolateImageFunctionPython:
_itkLabelImageGenericInterpolateImageFunctionPython.itkLabelImageGenericInterpolateImageFunctionIUS4NearestNeighbor_swigregister(itkLabelImageGenericInterpolateImageFunctionIUS4NearestNeighbor)

