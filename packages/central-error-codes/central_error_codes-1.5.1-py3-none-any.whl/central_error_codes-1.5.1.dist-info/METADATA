Metadata-Version: 2.2
Name: central_error_codes
Version: 1.5.1
Summary: A Python package to manage error codes for multiple microservices
Home-page: https://github.com/yourusername/central-error-codes
Author: Your Name
Author-email: your.email@example.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
License-File: LICENSE
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: summary

# Centralized Error Codes

## Overview
This repository provides a centralized collection of error codes that can be used across multiple microservices. It is designed to standardize error handling for both Node.js and Python-based applications.

## Publishing a New Node Module
Follow these steps to publish a new version of the module:

1. Install dependencies:
   ```sh
   npm i --save-dev @types/node
   ```
2. Build the project:
   ```sh
   npm run build
   ```
3. Package the module:
   ```sh
   npm pack
   ```
4. Publish the package to npm (ensure you are logged in):
   ```sh
   npm publish --access public
   ```
   If not logged in, run:
   ```sh
   npm login
   ```

## Installation
To use this package in a Node.js application, install it via npm:

```sh
npm install central-error-codes
```

## Usage in Node.js
Import and use the error codes in your application:

```typescript
import { ErrorCode } from "central-error-codes";

const ALL_ERROR_CODE = ErrorCode.getAllErrors();
const CMS_ERROR_CODE = ErrorCode.getCMSGatewayError();
```

## Usage in Python
For Python-based applications, usage instructions will be provided in a future update.
To publish new version 
pip install setuptools wheel twine
python3 setup.py sdist bdist_wheel
python3 -m build

twine upload dist/*

## License
This project is licensed under the MIT License.

