class AioamqpException(Exception): ...
class AmqpClosedConnection(AioamqpException): ...
class SynchronizationError(AioamqpException): ...
class EmptyQueue(AioamqpException): ...
class NoChannelAvailable(AioamqpException): ...

class ChannelClosed(AioamqpException):
    code: int
    message: str

    def __init__(self, code: int = 0, message: str = "Channel is closed") -> None: ...

class DuplicateConsumerTag(AioamqpException):
    def __repr__(self) -> str: ...

class ConsumerCancelled(AioamqpException):
    def __repr__(self) -> str: ...

class PublishFailed(AioamqpException):
    delivery_tag: int

    def __init__(self, delivery_tag: int) -> None: ...
    def __repr__(self) -> str: ...
