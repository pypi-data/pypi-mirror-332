name: CI
on:
  # push:
  #   branches:
  #   - main
  pull_request:
    paths-ignore:
    - README.md
    - CHANGELOG.md
  schedule:
  # run this at 03:03 on day-of-month 3.
  - cron: 3 3 3 * *
  workflow_dispatch:

concurrency:
  # auto-cancel any in-progress job *on the same branch*
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:

  build-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Source
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: astral-sh/setup-uv@f94ec6bedd8674c4426838e6b50417d36b6ab231 # v5.3.1
      with:
        enable-cache: true
        prune-cache: false
    - name: Check build
      run: uv build
    - name: Check sdist's size
      run: uv run scripts/check_sdist.py

  pre-publication-checks:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Source
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0
    - uses: astral-sh/setup-uv@f94ec6bedd8674c4426838e6b50417d36b6ab231 # v5.3.1
    - name: Check sdist's size
      run: uv run scripts/pre_publish_checks.py

  lint-rust:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    # this check should run as fast as possible, so, set up a cache
    - uses: Swatinem/rust-cache@f0deed1e0edfc6a9be95417288c0e1099b1eeec3 # v2.7.7
    - run: cargo clippy --all-targets --all-features -- -D warnings
    - run: cargo fmt --check

  resolve-msrv:
    runs-on: ubuntu-latest
    outputs:
      MSRV: ${{ steps.resolve-msrv.outputs.MSRV }}
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683   # v4.2.2
    - uses: astral-sh/setup-uv@f94ec6bedd8674c4426838e6b50417d36b6ab231   # v5.3.1
      with:
        python-version: '3.13'
        enable-cache: false
    - name: resolve MSRV
      id: resolve-msrv
      run: |
        echo MSRV=`python -c 'import tomllib; print(tomllib.load(open("Cargo.toml", "rb"))["package"]["rust-version"])'` >> $GITHUB_OUTPUT

  check-msrv:
    needs: [resolve-msrv]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - run: echo MSRV=${{ needs.resolve-msrv.outputs.MSRV }}
    - run: rustup default ${{ needs.resolve-msrv.outputs.MSRV }} && rustup default ${{ needs.resolve-msrv.outputs.MSRV }}
    # this check is very slow, so, set up a cache
    - uses: Swatinem/rust-cache@f0deed1e0edfc6a9be95417288c0e1099b1eeec3 # v2.7.7
    - run: cargo build --verbose
    - run: cargo test --verbose

  rust-tests:
    name: Rust project - ${{ matrix.toolchain }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
        - stable
        - beta
        - nightly
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
    - run: cargo build --verbose
    - run: cargo test --verbose

  rust-tests-future-deps:
    name: Rust project - future dependencies
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Source
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - run: rustup update
    - name: Override dependencies
      run: |
        echo '[patch.crates-io]' >> Cargo.toml
        echo 'pyo3 = { git = "https://github.com/PyO3/pyo3.git" }' >> Cargo.toml
        echo 'numpy = { git = "https://github.com/pyO3/rust-numpy.git" }' >> Cargo.toml
        echo 'num-traits = { git = "https://github.com/rust-num/num-traits.git" }' >> Cargo.toml
    - run: cargo build --verbose
    - run: cargo test --verbose

  python-tests:
    name: ${{matrix.os}} x py${{matrix.python-version}}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        #- macos-latest
        #- windows-latest
        python-version:
        - 3.9
        #- '3.10'
        #- '3.11'
        #- '3.12'
        - '3.13'

    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout Source
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: astral-sh/setup-uv@f94ec6bedd8674c4426838e6b50417d36b6ab231 # v5.3.1
      with:
        python-version: ${{ matrix.python-version }}
        enable-cache: true
        prune-cache: false

    - name: Test (with coverage)
      if: ${{ startsWith( matrix.os , 'ubuntu' ) }}
      run: |
        uv sync --group covcheck
        uv run --no-sync coverage run --parallel-mode -m pytest --color=yes
    - name: Test (without coverage)
      if: ${{ !startsWith( matrix.os , 'ubuntu' ) }}
      run: |
        uv sync --no-editable --group test
        uv run --no-sync pytest --color=yes

    - name: Upload coverage data
      # only using reports from ubuntu because
      # combining reports from multiple platforms is tricky (or impossible ?)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
      with:
        name: rlic_coverage_data-${{matrix.os}}-${{matrix.python-version}}
        path: .coverage.*
        if-no-files-found: ignore
        include-hidden-files: true

  regression-tests:
    name: Regression tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: astral-sh/setup-uv@f94ec6bedd8674c4426838e6b50417d36b6ab231 # v5.3.1
      with:
        python-version: 3.13
        enable-cache: true
        prune-cache: false
    - run: uv sync --group covcheck
    - name: install reference implementation
      run: uv pip install git+https://github.com/neutrinoceros/scikits-vectorplot.git
    - name: Test
      run: uv run --no-sync coverage run --parallel-mode -m pytest --color=yes -k regression
    - name: Upload coverage data
      uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
      with:
        name: rlic_coverage_data-regression-tests
        path: .coverage.*
        if-no-files-found: ignore
        include-hidden-files: true

  minimal-env:
    name: Minimal requirements
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: astral-sh/setup-uv@f94ec6bedd8674c4426838e6b50417d36b6ab231 # v5.3.1
      with:
        python-version: 3.9.0
        enable-cache: true
        prune-cache: false
    - name: Configure uv
      run: |
        echo "UV_RESOLUTION=lowest-direct" >> $GITHUB_ENV
    - run: uv sync --no-editable --group test
    - name: Test
      run: uv run --no-sync pytest --color=yes

  # concurrency-tests:
  #   name: Thread concurrency tests
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
  #   - uses: astral-sh/setup-uv@4db96194c378173c656ce18a155ffc14a9fc4355 # v5.2.2
  #     with:
  #       python-version: '3.13'
  #       enable-cache: true
  #       prune-cache: false
  #   - run: uv sync --no-editable --group concurrency
  #   - name: Run Concurrency Tests
  #     run: |
  #       uv run --no-sync \
  #         pytest --color=yes --count 500 tests/test_concurrent.py

  python-coverage:
    name: Combine & check coverage.
    runs-on: ubuntu-latest
    needs:
    - python-tests
    - regression-tests

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: astral-sh/setup-uv@f94ec6bedd8674c4426838e6b50417d36b6ab231 # v5.3.1
      with:
        python-version: '3.13'
        enable-cache: true
        prune-cache: false

    - uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
      with:
        pattern: rlic_coverage_data-*
        merge-multiple: true

    - name: Check coverage
      run: |
        uv tool install coverage
        coverage combine
        coverage html --skip-covered --skip-empty
        coverage report --fail-under=100 # >> $GITHUB_STEP_SUMMARY

    - name: Upload HTML report if check failed.
      uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
      with:
        name: rlic_coverage_report
        path: htmlcov
      if: ${{ failure() }}

  python-future-deps:
    name: Future Python dependencies
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Source
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: astral-sh/setup-uv@f94ec6bedd8674c4426838e6b50417d36b6ab231 # v5.3.1
      with:
        python-version: '3.13'
        enable-cache: true
        prune-cache: false
    - name: Configure uv
      run: |
        echo "UV_PRERELEASE=allow" >> $GITHUB_ENV
        echo "UV_INDEX=https://pypi.anaconda.org/scientific-python-nightly-wheels/simple" >> $GITHUB_ENV
        echo "UV_INDEX_STRATEGY=unsafe-best-match" >> $GITHUB_ENV
    - run: uv sync --no-editable --group test
    - name: Test
      run: uv run --no-sync pytest --color=yes

  typecheck-py39:
    # TODO: move --strict flag to pyproject.toml when 3.9 is dropped
    runs-on: ubuntu-latest
    name: type check (3.9)

    steps:
    - name: Checkout repo
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - uses: astral-sh/setup-uv@f94ec6bedd8674c4426838e6b50417d36b6ab231 # v5.3.1
      with:
        python-version: 3.9
        enable-cache: true
        prune-cache: false

    - run: uv sync --group typecheck
    - name: Typecheck (mypy)
      run: uv run --no-sync mypy src

    - name: Typecheck (pyright)
      run: uv run --no-sync pyright src

  typecheck-strict:
    strategy:
      matrix:
        python-version:
        # numpy 2.1 is needed for sane checking, so we cannot use mypy's
        # --strict flag, or basedpyright, on 3.9.
        - '3.10'
        - '3.13'
    runs-on: ubuntu-latest
    name: type check

    steps:
    - name: Checkout repo
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - uses: astral-sh/setup-uv@f94ec6bedd8674c4426838e6b50417d36b6ab231 # v5.3.1
      with:
        python-version: ${{ matrix.python-version }}
        enable-cache: true
        prune-cache: false

    - run: uv sync --group typecheck
    - name: Typecheck (mypy)
      run: uv run --no-sync mypy --strict src

    - name: Typecheck (pyright)
      run: uv run --no-sync pyright src

    #- name: Verify Types (pyright)
    #  run: uv run --no-sync pyright --verifytypes rlic

    - name: Typecheck (basedpyright)
      run: uv run --no-sync basedpyright src

    #- name: Verify Types (basedpyright)
    #  run: uv run --no-sync basedpyright --verifytypes rlic
