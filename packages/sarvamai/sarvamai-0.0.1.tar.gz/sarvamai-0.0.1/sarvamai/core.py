"""Fill in a module description here"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_core.ipynb.

# %% auto 0
__all__ = ['Sarvam']

# %% ../nbs/00_core.ipynb 2
import os
import requests
from dotenv import load_dotenv

load_dotenv()

class Sarvam:
    def __init__(self, api_key: str = os.getenv("SARVAM_API_KEY")):
        self.api_key = api_key

    def get_api_key(self):
        return self.api_key
    
    def text_to_speech(self, text: str, target_language:str, speaker="meera", pitch=0, pace=1, loudness=1, enable_preprocessing=True, model="bulbul:v1"):
        l = len(text)
        if l < 500:
            inputs = [text]
        elif l > 500 and l < 1500:
            sentence_len = l.split(".")
            if len(sentence_len) > 3:
                part1 = text[:l//3]
                part2 = text[l//3:2*l//3]
                part3 = text[2*l//3:]
                inputs = [part1, part2, part3]

            else:
                inputs = l.split(".")

        else:
            text = text[:1500]
            sentence_len = l.split(".")
            if len(sentence_len) > 3:
                part1 = text[:l//3]
                part2 = text[l//3:2*l//3]
                part3 = text[2*l//3:]
                inputs = [part1, part2, part3]


        headers = {
            "api-subscription-key": self.api_key,
            "Content-Type": "application/json"
        }

        payload = {
            "inputs": inputs,
            "target_language_code": target_language,
            "speaker": speaker,
            "pitch": pitch,
            "pace": pace,
            "loudness": loudness,
            "enable_preprocessing": enable_preprocessing,
            "model": model
        }

        url = "https://api.sarvam.ai/text-to-speech"
        response = requests.post(url, headers=headers, json=payload)
        return response.json()
        


