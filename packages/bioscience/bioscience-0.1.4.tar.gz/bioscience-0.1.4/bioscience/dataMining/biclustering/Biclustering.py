from .BiBit import *
from .Bcca import *
from bioscience.base import *

# BiBit algorithm
def bibit(dataset, cMnr = 2, cMnc = 2, deviceCount = 1, mode = 1, debug = False):
    """
    Main function processing the BiBit Biclustering algorithm.
    
    :param dataset: The dataset object store the data of input file.
    :type dataset: :class:`bioscience.base.models.Dataset`
    
    :param cMnr: Minimum number of rows to build a valid bicluster, defaults to 2.
    :type cMnr: int, optional
    
    :param cMnc: Minimum number of columns to build a valid bicluster, defaults to 2.
    :type cMnc: int, optional
    
    :param deviceCount: Number of GPU devices to execute, defaults to 1.
    :type deviceCount: int, optional
    
    :param mode: Type of execution of the algorithm: `mode=1` for sequential execution, `mode=2` for parallel execution on CPUs and `mode=3` for execution on a multi-GPU architecture. Defaults to 1.
    :type mode: int, optional
    
    :param mode: Attribute used to run the algorithm in debug mode, defaults to False
    :type mode: boolean, optional
    
    :return: A set of BiclusteringModel objects that stores all biclusters generated by the BiBit algorithm.
    :rtype: set(:class:`bioscience.base.models.BiclusteringModel`)
    """
    listModels = set()
    if dataset is not None:
        if dataset.data.dtype != "uint64":
            dataset.data = dataset.data.astype(np.uint64)
        if isinstance(dataset, Dataset):
            oModel = processBiBit(dataset, cMnr, cMnc, deviceCount, mode, debug)
            listModels.add(oModel)
            
        if isinstance(dataset, set):
            iLevel = 1
            for oDataset in dataset:
                print("\nLEVEL: ",str(iLevel))
                oModel = processBiBit(oDataset, cMnr, cMnc, deviceCount, mode, debug)
                listModels.add(oModel)
                iLevel += 1
    
    return listModels

# BCCA algorithm
def bcca(dataset, correlationThreshold = 0.7, minCols = 3, deviceCount = 1, mode = 1, debug = False):
    """
    Main function processing the BiBit Biclustering algorithm.
    
    :param dataset: The dataset object store the data of input file.
    :type dataset: :class:`bioscience.base.models.Dataset`
    
    :param cMnr: Minimum number of rows to build a valid bicluster, defaults to 2.
    :type cMnr: int, optional
    
    :param cMnc: Minimum number of columns to build a valid bicluster, defaults to 2.
    :type cMnc: int, optional
    
    :param deviceCount: Number of GPU devices to execute, defaults to 1.
    :type deviceCount: int, optional
    
    :param mode: Type of execution of the algorithm: `mode=1` for sequential execution, `mode=2` for parallel execution on CPUs and `mode=3` for execution on a multi-GPU architecture. Defaults to 1.
    :type mode: int, optional
    
    :param mode: Attribute used to run the algorithm in debug mode, defaults to False
    :type mode: boolean, optional
    
    :return: A set of BiclusteringModel objects that stores all biclusters generated by the BiBit algorithm.
    :rtype: set(:class:`bioscience.base.models.BiclusteringModel`)
    """
    listModels = set()
    if dataset is not None:

        if isinstance(dataset, Dataset):
            oModel = processBcca(dataset, correlationThreshold, minCols, deviceCount, mode, debug)
            listModels.add(oModel)
            
        if isinstance(dataset, set):
            iLevel = 1
            for oDataset in dataset:
                print("\nLEVEL: ",str(iLevel))
                oModel = processBcca(oDataset, correlationThreshold, minCols, deviceCount, mode, debug)
                listModels.add(oModel)
                iLevel += 1
    
    return listModels