{"version":3,"file":"lib_index_js.54860e87a1eb7badab0b.js","mappings":"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","sources":["webpack://jupyterlab-quick-share/./src/handler.ts","webpack://jupyterlab-quick-share/./src/index.ts"],"sourcesContent":["import { URLExt } from '@jupyterlab/coreutils';\n\nimport { ServerConnection } from '@jupyterlab/services';\n\n/**\n * Call the API extension\n *\n * @param endPoint API REST end point for the extension\n * @param init Initial values for the request\n * @returns The response body interpreted as JSON\n */\nexport async function requestAPI<T>(endPoint = '', init: RequestInit = {}): Promise<T> {\n  // Make request to Jupyter API\n  const settings = ServerConnection.makeSettings();\n  const requestUrl = URLExt.join(\n    settings.baseUrl,\n    'jupyterlab-quick-share', // API Namespace\n    endPoint\n  );\n\n  let response: Response;\n  try {\n    response = await ServerConnection.makeRequest(requestUrl, init, settings);\n  } catch (error) {\n    throw new ServerConnection.NetworkError(error as any);\n  }\n\n  let data: any = await response.text();\n\n  if (data.length > 0) {\n    try {\n      data = JSON.parse(data);\n    } catch (error) {\n      console.log('Not a JSON response body.', response);\n    }\n  }\n\n  if (!response.ok) {\n    throw new ServerConnection.ResponseError(response, data.message || data);\n  }\n\n  return data;\n}\n","import { ILabShell, JupyterFrontEnd, JupyterFrontEndPlugin } from '@jupyterlab/application';\nimport { IDefaultFileBrowser } from '@jupyterlab/filebrowser';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { requestAPI } from './handler';\n\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'jupyterlab-quick-share:plugin',\n  description: 'Send/receive links that make it easy to share notebooks (and other files)',\n  autoStart: true,\n  requires: [IDefaultFileBrowser, ISettingRegistry],\n  activate: async (app: JupyterFrontEnd, fileBrowser: IDefaultFileBrowser, settingRegistry: ISettingRegistry) => {\n    console.log('JupyterLab extension jupyterlab-quick-share is activated!');\n\n    const settings = (await settingRegistry.load(plugin.id)).composite.private as any;\n    if (settings.enableJupytextIssue1344Fix) {\n      fixJupytextIssue1344(app);\n    }\n\n    app.commands.addCommand('jupyterlab-quick-share:share', {\n      label: '⚡️ Copy Quick Share Link',\n      execute: async () => {\n        // TODO: Error if not a single file\n        const selectedFile = fileBrowser.selectedItems().next().value;\n        // console.log('Selected file:', selectedFile);\n        const data = await requestAPI<any>(`share?path=${encodeURIComponent(selectedFile.path)}`);\n        await navigator.clipboard.writeText(data.url);\n        // console.log('copied to clipboard:', data.url);\n      }\n    });\n\n    app.contextMenu.addItem({\n      command: 'jupyterlab-quick-share:share',\n      selector: '.jp-DirListing-item[data-isdir=\"false\"]',\n      rank: 0\n    });\n  }\n};\n\nfunction fixJupytextIssue1344(app: JupyterFrontEnd) {\n  (app.shell as ILabShell).layoutModified.connect(() => {\n    // query for an element with class jp-Launcher-sectionTitle and innerText \"Jupytext\"\n    const jupytextSectionTitle = Array.from(document.querySelectorAll('.jp-Launcher-sectionTitle'))\n      .find(el => el.textContent?.trim() === \"Jupytext\");\n    if (jupytextSectionTitle) {\n      const jupytextSection = jupytextSectionTitle.closest('.jp-Launcher-section');\n      console.log('jupytextSection:', jupytextSection);\n      // jupytextSection?.remove();\n    }\n\n    // document.querySelector('.jp-Launcher-section')?.remove();\n  });\n}\n\nexport default plugin;\n"],"names":[],"sourceRoot":""}