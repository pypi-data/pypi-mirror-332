Metadata-Version: 2.4
Name: mudder
Version: 0.3.1
Summary: Python port of mudderjs
Project-URL: Homepage, https://github.com/fellowapp/mudder-py
Project-URL: Repository, https://github.com/fellowapp/mudder-py
Project-URL: Changelog, https://github.com/fellowapp/mudder-py/releases
Author-email: Patrick Gingras <775.pg.12@gmail.com>
License: BSD-3-Clause
License-File: LICENSE.md
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Typing :: Typed
Requires-Python: >=3.10
Description-Content-Type: text/markdown

# mudder-py

This library is a port of [fasiha/mudderjs][1] to Python.

From the original readme:

> Generate lexicographically-spaced strings between two strings from pre-defined
> alphabets.

This technique is also known as
[_fractional indexing_](https://observablehq.com/@dgreensp/implementing-fractional-indexing).

[1]: https://github.com/fasiha/mudderjs

## Example

Usage is nearly identical to the original:

```python
from mudder import SymbolTable

hex_ = SymbolTable('0123456789abcdef')
hexstrings = hex_.mudder('ffff', 'fe0f', num_strings=3)
print(hexstrings)
# ['ff8', 'ff', 'fe8']
```
