{
    "ptrp_line": {
        "resource": {
            "name": "bucket_1",
            "type": "S3_BUCKET",
            "notes": [
                {
                    "note": "statement 'Bucket1PolicyDeny' in policy of arn:aws:s3:::bucket_1 has deny with condition for s3 service",
                    "note_type": "POLICY_STMT_DENY_WITH_CONDITION"
                }
            ]
        },
        "principal": {
            "arn": "arn:aws:iam::105246067165:user/iam_user_1",
            "name": "iam_user_1",
            "type": "IAM_USER",
            "notes": [
                {
                    "note": "statement 'IamUser1Inline' in policy 'inline-policy-deny' has deny with condition for s3 service",
                    "note_type": "POLICY_STMT_DENY_WITH_CONDITION"
                },
                {
                    "note": "statement 'Policy1Deny' in policy 'policy_1' (arn:aws:iam::105246067165:policy/policy_1) has deny with condition for s3 service",
                    "note_type": "POLICY_STMT_DENY_WITH_CONDITION"
                }
            ]
        },
        "action_permission_level": "READ",
        "path_nodes": [
            {
                "arn": "arn:aws:iam::105246067165:group/iam_group_1",
                "name": "iam_group_1",
                "type": "IAM_GROUP",
                "notes": []
            },
            {
                "arn": "arn:aws:iam::105246067165:group/iam_group_1",
                "name": "inline-policy-iam-group-1",
                "type": "IAM_INLINE_POLICY",
                "notes": [
                    {
                        "note": "statement 'IamGroup1InlineDeny' in policy 'inline-policy-iam-group-1' has deny with condition for s3 service",
                        "note_type": "POLICY_STMT_DENY_WITH_CONDITION"
                    }
                ]
            }
        ],
        "action_permissions": [
            "GetObject",
            "GetObjectVersion"
        ]
    },
    "authz_entry": {
        "asset": {
            "name": [
                "bucket_1"
            ],
            "type": "S3_BUCKET",
            "notes": [
                {
                    "note": "statement 'Bucket1PolicyDeny' in policy of arn:aws:s3:::bucket_1 has deny with condition for s3 service",
                    "type": "AWS_POLICY_STMT_DENY_WITH_CONDITION"
                }
            ]
        },
        "path": [
            {
                "id": "arn:aws:iam::105246067165:group/iam_group_1",
                "name": "iam_group_1",
                "type": "IAM_GROUP",
                "notes": [],
                "db_permissions": []
            },
            {
                "id": "arn:aws:iam::105246067165:group/iam_group_1",
                "name": "inline-policy-iam-group-1",
                "type": "IAM_INLINE_POLICY",
                "notes": [
                    {
                        "note": "statement 'IamGroup1InlineDeny' in policy 'inline-policy-iam-group-1' has deny with condition for s3 service",
                        "type": "AWS_POLICY_STMT_DENY_WITH_CONDITION"
                    }
                ],
                "db_permissions": [
                    "GetObject",
                    "GetObjectVersion"
                ]
            }
        ],
        "identity": {
            "id": "arn:aws:iam::105246067165:user/iam_user_1",
            "name": "iam_user_1",
            "type": "IAM_USER",
            "notes": [
                {
                    "note": "statement 'IamUser1Inline' in policy 'inline-policy-deny' has deny with condition for s3 service",
                    "type": "AWS_POLICY_STMT_DENY_WITH_CONDITION"
                },
                {
                    "note": "statement 'Policy1Deny' in policy 'policy_1' (arn:aws:iam::105246067165:policy/policy_1) has deny with condition for s3 service",
                    "type": "AWS_POLICY_STMT_DENY_WITH_CONDITION"
                }
            ]
        },
        "permission": "READ"
    }
}