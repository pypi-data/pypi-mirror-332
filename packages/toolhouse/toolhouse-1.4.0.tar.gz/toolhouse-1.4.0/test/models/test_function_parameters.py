# This file was generated by liblab | https://liblab.com/

import unittest
from src.toolhouse.models.FunctionParameters import FunctionParameters


class TestFunctionParametersModel(unittest.TestCase):
    def test_true(self):
        self.assertTrue(True)

    def test_function_parameters(self):
        # Create FunctionParameters class instance
        test_model = FunctionParameters(
            type="object", required=["eveniet", "dolorem"], properties={"quia": 3}
        )
        self.assertEqual(test_model.type, "object")
        self.assertEqual(test_model.required, ["eveniet", "dolorem"])
        self.assertEqual(test_model.properties, {"quia": 3})

    def test_function_parameters_required_fields_missing(self):
        # Assert FunctionParameters class generation fails without required fields
        with self.assertRaises(TypeError):
            test_model = FunctionParameters()


if __name__ == "__main__":
    unittest.main()
