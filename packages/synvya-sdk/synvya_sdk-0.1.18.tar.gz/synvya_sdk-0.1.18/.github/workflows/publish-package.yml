# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish Package

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4 

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev, examples]"
    
    - name: Run black
      run: black . --check
    
    - name: Run isort
      run: isort . --check
    
    - name: Run mypy
      run: mypy src tests examples

    - name: Enable Rust logs
      run: echo "RUST_LOG=debug" >> $GITHUB_ENV
    
    - name: Run Pylint
      run: pylint src tests examples --fail-under=8.0
    
    - name: Run tests
      env:
        RELAY: ${{ secrets.RELAY }}
        NSEC_TEST_KEY: ${{ secrets.NSEC_TEST_KEY }}
      run: pytest tests/ -v --log-cli-level=DEBUG --asyncio-mode=auto --ignore=tests/test_nostr_integration.py

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Clean build artifacts  
      run: rm -rf build/ dist/ *.egg-info
    
    - name: Build package
      run: python -m build
      
    - name: Upload distributions
      uses: actions/upload-artifact@v4
      with:
        name: release-dists
        path: dist/

  publish:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/synvya_sdk
    permissions:
      id-token: write

    steps:
      - name: Download release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          verbose: true
