# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['langtest',
 'langtest.augmentation',
 'langtest.datahandler',
 'langtest.embeddings',
 'langtest.evaluation',
 'langtest.metrics',
 'langtest.modelhandler',
 'langtest.pipelines',
 'langtest.pipelines.transformers',
 'langtest.pipelines.utils',
 'langtest.pipelines.utils.data_helpers',
 'langtest.tasks',
 'langtest.transform',
 'langtest.transform.image',
 'langtest.utils',
 'langtest.utils.custom_types']

package_data = \
{'': ['*'],
 'langtest': ['data/*',
              'data/ASDiv/*',
              'data/BBQ/*',
              'data/BSS/*',
              'data/Bigbench/Abstract-narrative-understanding/*',
              'data/Bigbench/Causal-judgment/*',
              'data/Bigbench/DisambiguationQA/*',
              'data/Bigbench/DisflQA/*',
              'data/BoolQ/*',
              'data/Clinical/*',
              'data/CommonsenseQA/*',
              'data/Consumer-Contracts/*',
              'data/Contracts/*',
              'data/Crows-Pairs/*',
              'data/DrugSwap/*',
              'data/Factual-Summary-Pairs/*',
              'data/Fiqa/*',
              'data/HellaSwag/*',
              'data/Legal-Support/*',
              'data/LiveQA/*',
              'data/LogiQA/*',
              'data/MMLU/*',
              'data/MedMCQA/MedMCQA-Test/*',
              'data/MedMCQA/MedMCQA-Validation/*',
              'data/MedQA/*',
              'data/MedicationQA/*',
              'data/MultiLexSum/*',
              'data/NQ-open/*',
              'data/Narrative-Wedging/*',
              'data/NarrativeQA/*',
              'data/OpenBookQA/*',
              'data/PIQA/*',
              'data/Privacy-Policy/*',
              'data/Prompt-Injection-Attack/*',
              'data/PubMedQA/pqaa/*',
              'data/PubMedQA/pqal/*',
              'data/Quac/*',
              'data/Retrieval_Datasets/*',
              'data/SIQA/*',
              'data/StereoSet/*',
              'data/Toxicity/*',
              'data/Translation/*',
              'data/TruthfulQA/*',
              'data/Wino-test/*',
              'data/XSum/*',
              'data/config/*',
              'data/conll/*',
              'data/healthsearchqa/*',
              'data/imdb/*',
              'data/resources/*',
              'data/textcat_imdb/*',
              'data/textcat_imdb/textcat/*',
              'data/textcat_imdb/vocab/*',
              'data/wikiDataset/*']}

install_requires = \
['click>=8.1.7',
 'importlib-resources>=6.4.0,<7.0.0',
 'jsonlines>=3.1.0',
 'nest-asyncio>=1.5.0,<2.0.0',
 'openpyxl>=3.1.5',
 'pandas>=2.0.3,<3.0.0',
 'pillow>=11.0.0',
 'pydantic==2.9.2',
 'pyyaml>=6.0,<7.0',
 'tables>=3.8.0',
 'tqdm>=4.67.1,<5.0.0',
 'typing-extensions>=4.10.0,<5.0.0']

extras_require = \
{':extra == "openai"': ['openai>=1.61.1,<2.0.0'],
 ':extra == "transformers"': ['transformers>=4.44.2,<5.0.0'],
 'ai21': ['ai21>=1.1.0,<2.0.0',
          'langchain>=0.3.15,<0.4.0',
          'langchain-community==0.3.5'],
 'cohere': ['cohere>=4.10.0,<5.0.0',
            'langchain>=0.3.15,<0.4.0',
            'langchain-community==0.3.5'],
 'databricks': ['langchain>=0.3.15,<0.4.0',
                'langchain-openai>=0.3.7,<0.4.0',
                'langchain-databricks==0.1.1',
                'langchain-community==0.3.5'],
 'datasets': ['datasets>=2.14.0'],
 'evaluate': ['rouge-score>=0.1.2,<0.2.0',
              'evaluate>=0.4.0,<0.5.0',
              'seqeval>=1.2.0,<2.0.0'],
 'huggingface-hub': ['huggingface_hub>0.16.0', 'langchain>=0.3.15,<0.4.0'],
 'johnsnowlabs': ['johnsnowlabs==5.5.0'],
 'llms': ['langchain>=0.3.15,<0.4.0',
          'langchain-openai>=0.3.7,<0.4.0',
          'langchain-databricks==0.1.1',
          'langchain-community==0.3.5',
          'langchain-ollama>=0.2.2,<0.3.0'],
 'matplotlib': ['matplotlib>=3.7.2,<4.0.0'],
 'metaflow': ['metaflow>=2.9.0'],
 'mlflow': ['mlflow>=2.19.0,<3.0.0'],
 'ollama-sdk': ['langchain>=0.3.15,<0.4.0',
                'langchain-community==0.3.5',
                'ollama>=0.4.7,<0.5.0'],
 'openai': ['langchain>=0.3.15,<0.4.0',
            'langchain-openai>=0.3.7,<0.4.0',
            'langchain-community==0.3.5'],
 'spacy': ['spacy>=3.0.0'],
 'transformers': ['torch>=2.0.0,<3.0.0',
                  'accelerate==0.34.2',
                  'datasets>=2.14.0']}

entry_points = \
{'console_scripts': ['langtest = langtest.__main__:cli']}

setup_kwargs = {
    'name': 'langtest',
    'version': '2.6.0',
    'description': 'John Snow Labs provides a library for delivering safe & effective NLP models.',
    'long_description': '<p align="center">\n  <img src="https://raw.githubusercontent.com/JohnSnowLabs/langtest/main/docs/assets/images/langtest/langtest_logo.png" alt="johnsnowlabs_logo" width="360" style="text-align:center;">\n</p>\n\n<div align="center">\n  <h1 style="text-align: center; vertical-align: middle;">LangTest: Deliver Safe & Effective Language Models</h1>\n</div>\n\n<p align="center">\n    <a href="https://github.com/JohnSnowLabs/langtest/releases">\n        <img alt="Release Notes" src="https://img.shields.io/github/v/release/johnsnowlabs/langtest.svg">\n    </a>\n    <a href="https://www.johnsnowlabs.com/responsible-ai-blog/">\n        <img alt="Blog" src="https://img.shields.io/badge/Responsible AI Blogs-8A2BE2">\n    </a>\n    <a href="https://langtest.org/docs/pages/docs/install">\n        <img alt="Documentation" src="https://img.shields.io/website?up_message=online&url=https%3A%2F%2Flangtest.org%2F">\n    </a>\n    <a href="https://star-history.com/#JohnSnowLabs/langtest">\n        <img alt="GitHub star chart" src="https://img.shields.io/github/stars/JohnSnowLabs/langtest?style=social">\n    </a>\n    <a href="https://github.com/JohnSnowLabs/langtest/issues">\n        <img alt="Open Issues" src="https://img.shields.io/github/issues-raw/JohnSnowLabs/langtest">\n    </a>\n    <a href="https://pepy.tech/project/langtest">\n        <img alt="Downloads" src="https://static.pepy.tech/badge/langtest">\n    </a>\n    <a href="https://github.com/JohnSnowLabs/langtest/actions/workflows/build_and_test.yml">\n        <img alt="CI" src="https://github.com/JohnSnowLabs/langtest/actions/workflows/build_and_test.yml/badge.svg">\n    </a>\n    <a href="https://github.com/JohnSnowLabs/langtest/blob/master/LICENSE" alt="License">\n        <img src="https://img.shields.io/badge/License-Apache%202.0-blue.svg" />\n    </a>\n    <a href="CODE_OF_CONDUCT.md">\n        <img alt="Contributor Covenant" src="https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg">\n    </a>\n\n![Langtest Workflow](https://raw.githubusercontent.com/JohnSnowLabs/langtest/main/docs/assets/images/langtest/langtest_flow_graphic.jpeg)\n\n<p align="center">\n  <a href="https://langtest.org/">Project\'s Website</a> •\n  <a href="#key-features">Key Features</a> •\n  <a href="#how-to-use">How To Use</a> •\n  <a href="#benchmark-datasets">Benchmark Datasets</a> •\n  <a href="#community-support">Community Support</a> •\n  <a href="#contributing-to-langtest">Contributing</a> •\n  <a href="#mission">Mission</a> •\n  <a href="#license">License</a>\n</p>\n\n## Project\'s Website\n\nTake a look at our official page for user documentation and examples: [langtest.org](http://langtest.org/) \n\n## Key Features\n\n- Generate and execute more than 60 distinct types of tests only with 1 line of code\n- Test all aspects of model quality: robustness, bias, representation, fairness and accuracy.\u200b\n- Automatically augment training data based on test results (for select models)\u200b\n- Support for popular NLP frameworks for NER, Translation and Text-Classifcation: Spark NLP, Hugging Face & Transformers.\n- Support for testing LLMS ( OpenAI, Cohere, AI21, Hugging Face Inference API and Azure-OpenAI LLMs) for question answering, toxicity, clinical-tests, legal-support, factuality, sycophancy, summarization and other popular tests. \n\n## Benchmark Datasets\n\nLangTest comes with different datasets to test your models, covering a wide range of use cases and evaluation scenarios. You can explore all the benchmark datasets available [here](https://langtest.org/docs/pages/benchmarks/benchmark), each meticulously curated to challenge and enhance your language models. \nWhether you\'re focused on Question-Answering, text summarization etc, LangTest ensures you have the right data to push your models to their limits and achieve peak performance in diverse linguistic tasks.\n\n## How To Use\n\n```python\n# Install langtest\n!pip install langtest[transformers]\n\n# Import and create a Harness object\nfrom langtest import Harness\nh = Harness(task=\'ner\', model={"model":\'dslim/bert-base-NER\', "hub":\'huggingface\'})\n\n# Generate test cases, run them and view a report\nh.generate().run().report()\n```\n\n> **Note**\n> For more extended examples of usage and documentation, head over to [langtest.org](https://www.langtest.org)\n\n## Responsible Ai Blogs\n\nYou can check out the following LangTest articles:\n\n| Blog | Description |\n|------|-------------|\n| [**Automatically Testing for Demographic Bias in Clinical Treatment Plans Generated by Large Language Models**](https://medium.com/john-snow-labs/automatically-testing-for-demographic-bias-in-clinical-treatment-plans-generated-by-large-language-ffcf358b6092) | Helps in understanding and testing demographic bias in clinical treatment plans generated by LLM. |\n| [**LangTest: Unveiling & Fixing Biases with End-to-End NLP Pipelines**](https://www.johnsnowlabs.com/langtest-unveiling-fixing-biases-with-end-to-end-nlp-pipelines/) | The end-to-end language pipeline in LangTest empowers NLP practitioners to tackle biases in language models with a comprehensive, data-driven, and iterative approach. |\n| [**Beyond Accuracy: Robustness Testing of Named Entity Recognition Models with LangTest**](https://medium.com/john-snow-labs/beyond-accuracy-robustness-testing-of-named-entity-recognition-models-with-langtest-fb046ace7eb9) | While accuracy is undoubtedly crucial, robustness testing takes natural language processing (NLP) models evaluation to the next level by ensuring that models can perform reliably and consistently across a wide array of real-world conditions. |\n| [**Elevate Your NLP Models with Automated Data Augmentation for Enhanced Performance**](https://medium.com/john-snow-labs/elevate-your-nlp-models-with-automated-data-augmentation-for-enhanced-performance-71aa7812c699) | In this article, we discuss how automated data augmentation may supercharge your NLP models and improve their performance and how we do that using  LangTest. |\n| [**Mitigating Gender-Occupational Stereotypes in AI: Evaluating Models with the Wino Bias Test through Langtest Library**](https://www.johnsnowlabs.com/mitigating-gender-occupational-stereotypes-in-ai-evaluating-language-models-with-the-wino-bias-test-through-the-langtest-library/) | In this article, we discuss how we can test the "Wino Bias” using LangTest. It specifically refers to testing biases arising from gender-occupational stereotypes. |\n| [**Automating Responsible AI: Integrating Hugging Face and LangTest for More Robust Models**](https://www.johnsnowlabs.com/automating-responsible-ai-integrating-hugging-face-and-langtest-for-more-robust-models/) | In this article, we have explored the integration between Hugging Face, your go-to source for state-of-the-art NLP models and datasets, and LangTest, your NLP pipeline’s secret weapon for testing and optimization. |\n| [**Detecting and Evaluating Sycophancy Bias: An Analysis of LLM and AI Solutions**](https://medium.com/john-snow-labs/detecting-and-evaluating-sycophancy-bias-an-analysis-of-llm-and-ai-solutions-ce7c93acb5db) | In this blog post, we discuss the pervasive issue of sycophantic AI behavior and the challenges it presents in the world of artificial intelligence. We explore how language models sometimes prioritize agreement over authenticity, hindering meaningful and unbiased conversations. Furthermore, we unveil a potential game-changing solution to this problem, synthetic data, which promises to revolutionize the way AI companions engage in discussions, making them more reliable and accurate across various real-world conditions. |\n| [**Unmasking Language Model Sensitivity in Negation and Toxicity Evaluations**](https://medium.com/john-snow-labs/unmasking-language-model-sensitivity-in-negation-and-toxicity-evaluations-f835cdc9cabf) | In this blog post, we delve into Language Model Sensitivity, examining how models handle negations and toxicity in language. Through these tests, we gain insights into the models\' adaptability and responsiveness, emphasizing the continuous need for improvement in NLP models. |\n| [**Unveiling Bias in Language Models: Gender, Race, Disability, and Socioeconomic Perspectives**](https://medium.com/john-snow-labs/unveiling-bias-in-language-models-gender-race-disability-and-socioeconomic-perspectives-af0206ed0feb) | In this blog post, we explore bias in Language Models, focusing on gender, race, disability, and socioeconomic factors. We assess this bias using the CrowS-Pairs dataset, designed to measure stereotypical biases. To address these biases, we discuss the importance of tools like LangTest in promoting fairness in NLP systems. |\n| [**Unmasking the Biases Within AI: How Gender, Ethnicity, Religion, and Economics Shape NLP and Beyond**](https://medium.com/@chakravarthik27/cf69c203f52c) | In this blog post, we tackle AI bias on how Gender, Ethnicity, Religion, and Economics Shape NLP systems. We discussed strategies for reducing bias and promoting fairness in AI systems. |\n| [**Evaluating Large Language Models on Gender-Occupational Stereotypes Using the Wino Bias Test**](https://medium.com/john-snow-labs/evaluating-large-language-models-on-gender-occupational-stereotypes-using-the-wino-bias-test-2a96619b4960) | In this blog post, we dive into testing the WinoBias dataset on LLMs, examining language models’ handling of gender and occupational roles, evaluation metrics, and the wider implications. Let’s explore the evaluation of language models with LangTest on the WinoBias dataset and confront the challenges of addressing bias in AI. |\n| [**Streamlining ML Workflows: Integrating MLFlow Tracking with LangTest for Enhanced Model Evaluations**](https://medium.com/john-snow-labs/streamlining-ml-workflows-integrating-mlflow-tracking-with-langtest-for-enhanced-model-evaluations-4ce9863a0ff1) | In this blog post, we dive into the growing need for transparent, systematic, and comprehensive tracking of models. Enter MLFlow and LangTest: two tools that, when combined, create a revolutionary approach to ML development. |\n| [**Testing the Question Answering Capabilities of Large Language Models**](https://medium.com/john-snow-labs/testing-the-question-answering-capabilities-of-large-language-models-1bc424d61740) | In this blog post, we dive into enhancing the QA evaluation capabilities using LangTest library. Explore about different evaluation methods that LangTest offers to address the complexities of evaluating Question Answering (QA) tasks. |\n| [**Evaluating Stereotype Bias with LangTest**](https://medium.com/john-snow-labs/evaluating-stereotype-bias-with-langtest-8286af8f0f22) | In this blog post, we are focusing on using the StereoSet dataset to assess bias related to gender, profession, and race.|\n| [**Testing the Robustness of LSTM-Based Sentiment Analysis Models**](https://medium.com/john-snow-labs/testing-the-robustness-of-lstm-based-sentiment-analysis-models-67ed84e42997) | Explore the robustness of custom models with LangTest Insights.|\n| [**LangTest Insights: A Deep Dive into LLM Robustness on OpenBookQA**](https://medium.com/john-snow-labs/langtest-insights-a-deep-dive-into-llm-robustness-on-openbookqa-ab0ddcbd2ab1) | Explore the robustness of Language Models (LLMs) on the OpenBookQA dataset with LangTest Insights.|\n| [**LangTest: A Secret Weapon for Improving the Robustness of Your Transformers Language Models**](https://medium.com/john-snow-labs/langtest-a-secret-weapon-for-improving-the-robustness-of-your-transformers-language-models-9693d64256cc) | Explore the robustness of Transformers Language Models with LangTest Insights.|\n| [**Mastering Model Evaluation: Introducing the Comprehensive Ranking & Leaderboard System in LangTest**](https://medium.com/john-snow-labs/mastering-model-evaluation-introducing-the-comprehensive-ranking-leaderboard-system-in-langtest-5242927754bb) | The Model Ranking & Leaderboard system by John Snow Labs\' LangTest offers a systematic approach to evaluating AI models with comprehensive ranking, historical comparisons, and dataset-specific insights, empowering researchers and data scientists to make data-driven decisions on model performance. |\n| [**Evaluating Long-Form Responses with Prometheus-Eval and Langtest**](https://medium.com/john-snow-labs/evaluating-long-form-responses-with-prometheus-eval-and-langtest-a8279355362e) | Prometheus-Eval and LangTest unite to offer an open-source, reliable, and cost-effective solution for evaluating long-form responses, combining Prometheus\'s GPT-4-level performance and LangTest\'s robust testing framework to provide detailed, interpretable feedback and high accuracy in assessments. |\n| [**Ensuring Precision of LLMs in Medical Domain: The Challenge of Drug Name\xa0Swapping**](https://medium.com/john-snow-labs/ensuring-precision-of-llms-in-medical-domain-the-challenge-of-drug-name-swapping-d7f4c83d55fd) | Accurate drug name identification is crucial for patient safety. Testing GPT-4o with LangTest\'s **_drug_generic_to_brand_** conversion test revealed potential errors in predicting drug names when brand names are replaced by ingredients, highlighting the need for ongoing refinement and rigorous testing to ensure medical LLM accuracy and reliability. |\n\n\n\n\n\n\n\n> **Note**\n> To check all blogs, head over to [Blogs](https://www.johnsnowlabs.com/responsible-ai-blog/)\n\n## Community Support\n\n- [Slack](https://www.johnsnowlabs.com/slack-redirect/) For live discussion with the LangTest community, join the `#langtest` channel\n- [GitHub](https://github.com/JohnSnowLabs/langtest/tree/main) For bug reports, feature requests, and contributions\n- [Discussions](https://github.com/JohnSnowLabs/langtest/discussions) To engage with other community members, share ideas, and show off how you use LangTest!\n\n## Mission\n\nWhile there is a lot of talk about the need to train AI models that are safe, robust, and fair - few tools have been made available to data scientists to meet these goals. As a result, the front line of NLP models in production systems reflects a sorry state of affairs. \n\nWe propose here an early stage open-source community project that aims to fill this gap, and would love for you to join us on this mission. We aim to build on the foundation laid by previous research such as [Ribeiro et al. (2020)](https://arxiv.org/abs/2005.04118), [Song et al. (2020)](https://arxiv.org/abs/2004.00053), [Parrish et al. (2021)](https://arxiv.org/abs/2110.08193), [van Aken et al. (2021)](https://arxiv.org/abs/2111.15512) and many others. \n\n[John Snow Labs](www.johnsnowlabs.com) has a full development team allocated to the project and is committed to improving the library for years, as we do with other open-source libraries. Expect frequent releases with new test types, tasks, languages, and platforms to be added regularly. We look forward to working together to make safe, reliable, and responsible NLP an everyday reality. \n\n\n> **Note**\n> For usage and documentation, head over to [langtest.org](https://langtest.org/docs/pages/docs/data#question-answering)\n\n\n## Contributing to LangTest\n\nWe welcome all sorts of contributions:\n\n- [Ideas](https://github.com/JohnSnowLabs/langtest/discussions/categories/ideas)\n- [Discussions](https://github.com/JohnSnowLabs/langtest/discussions)\n- [Feedback](https://github.com/JohnSnowLabs/langtest/discussions/categories/general)\n- [Documentation](https://www.example.com/documentation)\n- [Bug reports](https://www.example.com/bug-reports)\n\nA detailed overview of contributing can be found in the **[contributing guide](https://github.com/JohnSnowLabs/langtest/blob/main/CONTRIBUTING.md)**.\n\nIf you are looking to start working with the LangTest codebase, navigate to the GitHub ["issues"](https://github.com/JohnSnowLabs/langtest/issues) tab and start looking through interesting issues. There are a number of issues listed under where you could start out.\nOr maybe through using LangTest you have an idea of your own or are looking for something in the documentation and thinking ‘This can be improved’...you can do something about it!\n\nFeel free to ask questions on the [Q&A](https://github.com/JohnSnowLabs/langtest/discussions/categories/q-a) discussions.\n\nAs contributors and maintainers to this project, you are expected to abide by LangTest\'s code of conduct. More information can be found at: [Contributor Code of Conduct](https://github.com/JohnSnowLabs/langtest/blob/release/1.8.0/CODE_OF_CONDUCT.md)\n\n\n## Citation\n\nWe have published a [paper](https://www.sciencedirect.com/science/article/pii/S2665963824000071) that you can cite for\nthe LangTest library:\n\n```bibtex\n@article{nazir2024langtest,\n  title={LangTest: A comprehensive evaluation library for custom LLM and NLP models},\n  author={Arshaan Nazir, Thadaka Kalyan Chakravarthy, David Amore Cecchini, Rakshit Khajuria, Prikshit Sharma, Ali Tarik Mirik, Veysel Kocaman and David Talby},\n  journal={Software Impacts},\n  pages={100619},\n  year={2024},\n  publisher={Elsevier}\n}\n```\n\n\n## Contributors\n\nWe would like to acknowledge all contributors of this open-source community project. \n\n<a href="https://github.com/johnsnowlabs/langtest/graphs/contributors">\n  <img src="https://contrib.rocks/image?repo=johnsnowlabs/langtest" />\n</a>\n\n## License\n\nLangTest is released under the [Apache License 2.0](https://github.com/JohnSnowLabs/langtest/blob/main/LICENSE), which guarantees commercial use, modification, distribution, patent use, private use and sets limitations on trademark use, liability and warranty.\n\n',
    'author': 'John Snow Labs',
    'author_email': 'support@johnsnowlabs.com',
    'maintainer': 'None',
    'maintainer_email': 'None',
    'url': 'https://www.langtest.org',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'extras_require': extras_require,
    'entry_points': entry_points,
    'python_requires': '>=3.9,<4.0',
}


setup(**setup_kwargs)
