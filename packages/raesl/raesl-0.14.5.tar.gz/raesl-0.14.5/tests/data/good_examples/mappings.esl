define verb
  provide to
  convert into

define relation
  foo

world
  variables
    x, y, z is a real

  components
    blab is a blub with arguments
      x, z
    bleb is a blub with arguments
      z, x

  goal-requirement
    # provide-x must yield the following mapping relations
    # ("blab", "x")
    # ("blab", "y")
    # ("blab", "provide-x")
    # ("bleb", "x")
    # ("bleb", "y")
    # ("bleb", "provide x")
    # ("provide-x", "x")
    # ("provide-x", "y")
    # ("provide-x", "blab.transform-q")
    # ("provide-x", "bleb.transform-q")
    provide-x: blab must provide x to bleb ...
      with subclause
        bound-on-y: y must be at most 5
      end
    # provide-y must yield the following mapping relations
    # ("bleb, "z")
    # ("bleb", "provide-z")
    # ("blab", "z")
    # ("blab", "provide-z")
    # ("provide-z", "z")
    # ("provide-z", "blab.transform-q")
    # ("provide-z", "bleb.transform-q")
    provide-z: bleb must provide z to blab ...

  design-requirement
    # d-x-z must yield the following mapping relations
    # ("provide-z", "d-x-z")
    # ("provide-x", "d-x-z")
    # ("bleb", "d-x-z")
    # ("blab", "d-x-z")
    # ("d-x-z", "x")
    # ("d-x-z", "z")
    # ("d-x-z", "blab.transform-q")
    # ("d-x-z", "bleb.transform-q")
    d-x-z: x must be equal to z

  need
    # n1 must yield the following mapping relations
    # ("n1", "bleb")
    n1: bleb must blabla
    # n1 must yield the following mapping relations
    # ("n2", "x")
    n2: x must blabla
    # n1 must yield the following mapping relations
    # ("n3", "provide-x")
    n3: provide-x must be blabla
    # n1 must yield the following mapping relations
    # ("n4", "d-x-z")
    n4: d-x-z must blabla

  relation
    # foo-1 must yield the following mapping relations
    # ("foo-1", "x")
    # ("foo-1", "y")
    # ("foo-1", "blab.transform-q"")
    # ("foo-1", "bleb.transform-q"")
    # ("foo-1", "provide-x")
    # ("foo-1", "d-x-z")
    foo-1: foo with arguments
      x, y

define component blub
  parameters
    q is a real property
    r is a real

  transformation-requirement
    # convert-q must yield the following mapping relations
    # ("bleb.convert-q", "provide-x")
    # ("bleb.convert-q", "provide-x")
    # ("blab.convert-q", "provide-x")
    # ("blab.convert-q", "provide-z")
    # ("bleb.convert-q", "z")
    # ("bleb.convert-q", "x")
    # ("blab.convert-q", "z")
    # ("blab.convert-q", "x")
    # ("bleb.convert-q", "bleb")
    # ("blab.convert-q", "blab")
    convert-q: must convert q into r
