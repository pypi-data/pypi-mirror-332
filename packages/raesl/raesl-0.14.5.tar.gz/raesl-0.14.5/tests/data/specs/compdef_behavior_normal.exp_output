
TYPES:
type#1 = type
type#2 = type
type#3 = type
type#4 = type

typedef real: type#1
typedef integer: type#2
typedef string: type#3
typedef boolean: type#4

VERBS:

RELATION-DEFINITIONS:

COMPONENTS:
    world:
      #< No doc-comments found.
    def component X:
      #< No doc-comments found.
        param x
          - type#1
            #< No doc-comments found.
        param y
          - type#1
            #< No doc-comments found.
        requirement behavior output-x:
          #< No doc-comments found.
            case A:
                c1: if
                  y is < 5[-]
                  - type#1
                    #< No doc-comments found.
                r1: then
                  x must <= 5[-]
                  - type#1
                    #< No doc-comments found.
            case B:
                c2: if
                  y is > 10[-]
                  - type#1
                    #< No doc-comments found.
                r2: then
                  x must <= 10[-]
                  - type#1
                    #< No doc-comments found.
            default:
                r3: then
                  x must == 0[-]
                  - type#1
                    #< No doc-comments found.
