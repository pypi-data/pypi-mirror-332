
TYPES:
type#1 = type
type#2 = type
type#3 = type
type#4 = type

typedef real: type#1
typedef integer: type#2
typedef string: type#3
typedef boolean: type#4

VERBS:

RELATION-DEFINITIONS:

COMPONENTS:
    world:
      #< No doc-comments found.
        var v
          - type#1
            #< No doc-comments found.
        var w
          - type#1
            #< No doc-comments found.
        child-component one-owner: def=Y
          #< No doc-comments found.
            arg v <-> param w
              - type#1
                #< No doc-comments found.
        child-component two-owners: def=XY
          #< No doc-comments found.
            arg w <-> param v
              - type#1
                #< No doc-comments found.
    def component XY:
      #< No doc-comments found.
        param v: property
          - type#1
            #< No doc-comments found.
        child-component child: def=Y
          #< No doc-comments found.
            arg v <-> param w
              - type#1
                #< No doc-comments found.
    def component Y:
      #< No doc-comments found.
        param w: property
          - type#1
            #< No doc-comments found.
