
TYPES:
type#1 = type
type#2 = type
type#3 = type
type#4 = type

typedef real: type#1
typedef integer: type#2
typedef string: type#3
typedef boolean: type#4

VERBS:

RELATION-DEFINITIONS:

COMPONENTS:
    world:
      #< No doc-comments found.
        var x1
          - type#1
            #< No doc-comments found.
        var x2
          - type#1
            #< No doc-comments found.
        child-component blab1: def=Blab
          #< No doc-comments found.
            arg x1 <-> param x
              - type#1
                #< No doc-comments found.
        child-component blab2: def=Blab
          #< No doc-comments found.
            arg x2 <-> param x
              - type#1
                #< No doc-comments found.
        requirement design dr1
          #< No doc-comments found.
            x1 shall == x2
            - type#1
              #< No doc-comments found.
            - type#1
              #< No doc-comments found.
    def component Blab:
      #< No doc-comments found.
        param x
          - type#1
            #< No doc-comments found.
        child-component blob: def=Blob
          #< No doc-comments found.
            arg x <-> param x
              - type#1
                #< No doc-comments found.
    def component Blob:
      #< No doc-comments found.
        param x: property
          - type#1
            #< No doc-comments found.
