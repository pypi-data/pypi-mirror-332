
TYPES:
type#1 = type
type#2 = type
type#3 = type
type#4 = type
type#5 = bundle
    r: type#1
    s: type#3
type#5 end


typedef real: type#1
typedef integer: type#2
typedef string: type#3
typedef boolean: type#4
typedef B: type#5

VERBS:
    VerbPrepos('provide', 'to')
      #< No doc-comments found.

RELATION-DEFINITIONS:

COMPONENTS:
    world:
      #< No doc-comments found.
        var a
          - type#1
            #< No doc-comments found.
        var b
          \- r - type#1
          |      #< No doc-comments found.
          \- s - type#3
                 #< No doc-comments found.
        child-component foo: def=blob
          #< No doc-comments found.
            No instance argument!
        child-component faa: def=blob
          #< No doc-comments found.
            No instance argument!
        requirement goal provide-real:
          #< No doc-comments found.
            comp 'foo' must (provide to) comp 'faa'
            flow 'b.r':
              - type#1
                #< No doc-comments found.
        need c1: subject b.r
          #< No doc-comments found.
        need c2: subject b.s
          #< No doc-comments found.
    def component blob:
      #< No doc-comments found.
