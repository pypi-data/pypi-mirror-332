## ***************************************************************************
## * FONT                                                                    *
## ***************************************************************************
## The font properties used by `text.Text`.
## See https://matplotlib.org/stable/api/font_manager_api.html for more information
## on font properties.  The 6 font properties used for font matching are
## given below with their default values.
##
## The font.family property can take either a single or multiple entries of any
## combination of concrete font names (not supported when rendering text with
## usetex) or the following five generic values:
##     - 'serif' (e.g., Times),
##     - 'sans-serif' (e.g., Helvetica),
##     - 'cursive' (e.g., Zapf-Chancery),
##     - 'fantasy' (e.g., Western), and
##     - 'monospace' (e.g., Courier).
## Each of these values has a corresponding default list of font names
## (font.serif, etc.); the first available font in the list is used.  Note that
## for font.serif, font.sans-serif, and font.monospace, the first element of
## the list (a DejaVu font) will always be used because DejaVu is shipped with
## Matplotlib and is thus guaranteed to be available; the other entries are
## left as examples of other possible values.
##
## The font.style property has three values: normal (or roman), italic
## or oblique.  The oblique style will be used for italic, if it is not
## present.
##
## The font.variant property has two values: normal or small-caps.  For
## TrueType fonts, which are scalable fonts, small-caps is equivalent
## to using a font size of 'smaller', or about 83 % of the current font
## size.
##
## The font.weight property has effectively 13 values: normal, bold,
## bolder, lighter, 100, 200, 300, ..., 900.  Normal is the same as
## 400, and bold is 700.  bolder and lighter are relative values with
## respect to the current weight.
##
## The font.stretch property has 11 values: ultra-condensed,
## extra-condensed, condensed, semi-condensed, normal, semi-expanded,
## expanded, extra-expanded, ultra-expanded, wider, and narrower.  This
## property is not currently implemented.
##
## The font.size property is the default font size for text, given in points.
## 10 pt is the standard value.
##
## Note that font.size controls default text sizes.  To configure
## special text sizes tick labels, axes, labels, title, etc., see the rc
## settings for axes and ticks.  Special text sizes can be defined
## relative to font.size, using the following values: xx-small, x-small,
## small, medium, large, x-large, xx-large, larger, or smaller

font.family:  Satoshi
#font.style:   normal
#font.variant: normal
#font.weight:  normal
#font.stretch: normal
#font.size:    10.0

#font.serif:      DejaVu Serif, Bitstream Vera Serif, Computer Modern Roman, New Century Schoolbook, Century Schoolbook L, Utopia, ITC Bookman, Bookman, Nimbus Roman No9 L, Times New Roman, Times, Palatino, Charter, serif
#font.sans-serif: DejaVu Sans, Bitstream Vera Sans, Computer Modern Sans Serif, Lucida Grande, Verdana, Geneva, Lucid, Arial, Helvetica, Avant Garde, sans-serif
#font.cursive:    Apple Chancery, Textile, Zapf Chancery, Sand, Script MT, Felipa, Comic Neue, Comic Sans MS, cursive
#font.fantasy:    Chicago, Charcoal, Impact, Western, Humor Sans, xkcd, fantasy
#font.monospace:  DejaVu Sans Mono, Bitstream Vera Sans Mono, Computer Modern Typewriter, Andale Mono, Nimbus Mono L, Courier New, Courier, Fixed, Terminal, monospace


## ***************************************************************************
## * LINES                                                                   *
## ***************************************************************************
## See https://matplotlib.org/stable/api/artist_api.html#module-matplotlib.lines
## for more information on line properties.
lines.linewidth: 2                  # line width in points
lines.linestyle: -                 # solid line
#lines.color:     C0                # has no affect on plot(); see axes.prop_cycle
lines.marker:          None        # the default marker
#lines.markerfacecolor: auto        # the default marker face color
#lines.markeredgecolor: auto        # the default marker edge color
#lines.markeredgewidth: 1.0         # the line width around the marker symbol
#lines.markersize:      6           # marker size, in points
#lines.dash_joinstyle:  round       # {miter, round, bevel}
#lines.dash_capstyle:   butt        # {butt, round, projecting}
#lines.solid_joinstyle: round       # {miter, round, bevel}
#lines.solid_capstyle:  projecting  # {butt, round, projecting}
#lines.antialiased: True            # render lines in antialiased (no jaggies)

## The three standard dash patterns.  These are scaled by the linewidth.
#lines.dashed_pattern: 3.7, 1.6
#lines.dashdot_pattern: 6.4, 1.6, 1, 1.6
#lines.dotted_pattern: 1, 1.65
#lines.scale_dashes: True

#markers.fillstyle: full  # {full, left, right, bottom, top, none}

#pcolor.shading: auto
#pcolormesh.snap: True  # Whether to snap the mesh to pixel boundaries. This is
                        # provided solely to allow old test images to remain
                        # unchanged. Set to False to obtain the previous behavior.


# ***************************************************************************
# * AXES                                                                    *
# ***************************************************************************
# Following are default face and edge colors, default tick sizes,
# default font sizes for tick labels, and so on.  See
# https://matplotlib.org/api/axes_api.html#module-matplotlib.axes
axes.facecolor:     white   # axes background color
axes.edgecolor:     black   # axes edge color
axes.linewidth:     0.8     # edge line width
axes.grid:          False   # display grid or not
axes.grid.axis:     both    # which axis the grid should apply to
axes.grid.which:    major   # grid lines at {major, minor, both} ticks
axes.titlelocation: center  # alignment of the title: {left, right, center}
axes.titlesize:     large   # font size of the axes title
axes.titleweight:   bold  # font weight of title
axes.titlecolor:    black    # color of the axes title, auto falls back to
                             # text.color as default value


axes.titley:        None    # position title (axes relative units).  None implies auto
axes.titlepad:      6.0     # pad between axes and title in points
axes.labelsize:     small  # font size of the x and y labels
axes.labelpad:      4.0     # space between label and axis
axes.labelweight:   normal  # weight of the x and y labels
axes.labelcolor:    black
axes.axisbelow:     line    # draw axis gridlines and ticks:
                             #     - below patches (True)
                             #     - above patches but below lines ('line')
                             #     - above all (False

#axes.prop_cycle: cycler('color', ['0072B2', '009E73', 'D55E00', 'CC79A7', 'F0E442', '56B4E9'])


# ***************************************************************************
# * FIGURE                                                                  *
# ***************************************************************************
# See https://matplotlib.org/api/figure_api.html#matplotlib.figure.Figure
figure.titlesize:   x-large     # size of the figure title (``Figure.suptitle()``)
figure.titleweight: bold    # weight of the figure title
figure.figsize:     10.0, 5.0  # figure size in inches - 6.4, 4.8
figure.dpi:         600       # figure dots per inch
figure.facecolor:   white     # figure face color
figure.edgecolor:   white     # figure edge color
figure.frameon:     True      # enable figure frame
#figure.max_open_warning: 20   # The maximum number of figures to open through
                               # the pyplot interface before emitting a warning.
                               # If less than one this feature is disabled.
#figure.raise_window : True    # Raise the GUI window to front when show() is called.

# The figure subplot parameters.  All dimensions are a fraction of the figure width and height.
figure.subplot.left:   0.0  # the left side of the subplots of the figure
figure.subplot.right:  1.0    # the right side of the subplots of the figure
figure.subplot.bottom: 0.11   # the bottom of the subplots of the figure
figure.subplot.top:    0.88   # the top of the subplots of the figure
figure.subplot.wspace: 0.2    # the amount of width reserved for space between subplots,
                               # expressed as a fraction of the average axis width
figure.subplot.hspace: 0.2    # the amount of height reserved for space between subplots,
                               # expressed as a fraction of the average axis height


# ***************************************************************************
# * GRIDS                                                                   *
# ***************************************************************************
grid.color:     b0b0b0  # grid color
grid.linestyle: -      # solid
grid.linewidth: 0.5     # in points
grid.alpha:     0.2    # transparency, between 0.0 and 1.0


# ***************************************************************************
# * TICKS                                                                   *
# ***************************************************************************
# See https://matplotlib.org/api/axis_api.html#matplotlib.axis.Tick
xtick.top:           False   # draw ticks on the top side
xtick.bottom:        True    # draw ticks on the bottom side
xtick.labeltop:      False   # draw label on the top
xtick.labelbottom:   True    # draw label on the bottom
xtick.major.size:    3.5     # major tick size in points
xtick.minor.size:    2       # minor tick size in points
xtick.major.width:   0.8     # major tick width in points
xtick.minor.width:   0.6     # minor tick width in points
xtick.major.pad:     3.5     # distance to major tick label in points
xtick.minor.pad:     3.4     # distance to the minor tick label in points
xtick.color:         black   # color of the ticks
xtick.labelcolor:    inherit # color of the tick labels or inherit from xtick.color
xtick.labelsize:     small  # font size of the tick labels
xtick.direction:     in     # direction: {in, out, inout}
xtick.minor.visible: False   # visibility of minor ticks on x-axis
xtick.major.top:     True    # draw x axis top major ticks
xtick.major.bottom:  True    # draw x axis bottom major ticks
xtick.minor.top:     True    # draw x axis top minor ticks
xtick.minor.bottom:  True    # draw x axis bottom minor ticks
xtick.alignment:     center  # alignment of xticks

ytick.left:          True    # draw ticks on the left side
ytick.right:         False   # draw ticks on the right side
ytick.labelleft:     True    # draw tick labels on the left side
ytick.labelright:    False   # draw tick labels on the right side
ytick.major.size:    3.5     # major tick size in points
ytick.minor.size:    2       # minor tick size in points
ytick.major.width:   0.8     # major tick width in points
ytick.minor.width:   0.6     # minor tick width in points
ytick.major.pad:     3.5     # distance to major tick label in points
ytick.minor.pad:     3.4     # distance to the minor tick label in points
ytick.color:         black   # color of the ticks
ytick.labelcolor:    inherit # color of the tick labels or inherit from ytick.color
ytick.labelsize:     small  # font size of the tick labels
ytick.direction:     in     # direction: {in, out, inout}
ytick.minor.visible: False   # visibility of minor ticks on y-axis
ytick.major.left:    True    # draw y axis left major ticks
ytick.major.right:   True    # draw y axis right major ticks
ytick.minor.left:    True    # draw y axis left minor ticks
ytick.minor.right:   True    # draw y axis right minor ticks
ytick.alignment:     center_baseline  # alignment of yticks
