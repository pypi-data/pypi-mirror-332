[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "cogentic"
version = "0.1.5"
description = "A hypothesis-based orchestration framework built on AutoGen and based on MagenticOne"
readme = "README.md"
authors = [{ name = "knifeyspoony" }]
requires-python = ">=3.12"
dependencies = [
    "autogen-agentchat>=0.4.7",
]
keywords = ["autogen", "orchestration", "llm", "ai", "agents"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
license = { file = "LICENSE" }

[project.urls]
homepage = "https://github.com/knifeyspoony/cogentic"
issues = "https://github.com/knifeyspoony/cogentic/issues"

[dependency-groups]
dev = [
    "langfuse>=2.59.6",
    "pytest-asyncio>=0.25.3",
    "pytest>=8.3.5",
    "taskipy>=1.14.1",
    "ruff>=0.9.9",
    "pyright>=1.1.396",
    "cogentic",
    "twine>=6.1.0",
    "autogen-ext[openai, web-surfer]>=0.4.7",
    "python-dotenv>=1.0.1",
]

[tool.hatch.build.targets.sdist]
only-include = ["src/cogentic/orchestration"]

[tool.hatch.build.targets.wheel]
packages = ["src/cogentic"]

[tool.pyright] 
typeCheckingMode = "standard"

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
pythonpath = "src"

[tool.taskipy.tasks]
lint = { cmd = "uv run ruff format && uv run pyright", help = "Run linters" }
build = { cmd = "uv run task lint && uv build", help = "Run linters and build the package" }
