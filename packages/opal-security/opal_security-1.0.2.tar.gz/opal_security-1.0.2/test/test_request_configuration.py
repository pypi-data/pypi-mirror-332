# coding: utf-8

"""
    Opal API

    Your Home For Developer Resources.

    The version of the OpenAPI document: 1.0
    Contact: hello@opal.dev
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from opal_security.models.request_configuration import RequestConfiguration

class TestRequestConfiguration(unittest.TestCase):
    """RequestConfiguration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RequestConfiguration:
        """Test RequestConfiguration
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RequestConfiguration`
        """
        model = RequestConfiguration()
        if include_optional:
            return RequestConfiguration(
                condition = {"group_ids":["1b978423-db0a-4037-a4cf-f79c60cb67b3"]},
                allow_requests = True,
                auto_approval = False,
                require_mfa_to_request = False,
                max_duration_minutes = 120,
                recommended_duration_minutes = 120,
                require_support_ticket = False,
                request_template_id = '06851574-e50d-40ca-8c78-f72ae6ab4304',
                reviewer_stages = [
                    {"owner_ids":["7870617d-e72a-47f5-a84c-693817ab4567","1520617d-e72a-47f5-a84c-693817ab48ad2"]}
                    ],
                priority = 1
            )
        else:
            return RequestConfiguration(
                allow_requests = True,
                auto_approval = False,
                require_mfa_to_request = False,
                require_support_ticket = False,
                reviewer_stages = [
                    {"owner_ids":["7870617d-e72a-47f5-a84c-693817ab4567","1520617d-e72a-47f5-a84c-693817ab48ad2"]}
                    ],
                priority = 1,
        )
        """

    def testRequestConfiguration(self):
        """Test RequestConfiguration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
