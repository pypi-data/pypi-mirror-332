name: labtasker

services:
  mongodb:
    image: mongo:latest
    container_name: labtasker-mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}
      - MONGO_INITDB_DATABASE=${DB_NAME:-labtasker_db}
    command: [ "--replSet", "rs0", "--keyFile", "/data/configdb/mongo-keyfile" ]
    entrypoint: [ "/usr/local/bin/docker-entrypoint-wrapped.sh" ]
    volumes:
      - mongo-data:/data/db
      - mongo-keyfile:/data/configdb:rw
      - ./docker/mongodb/healthcheck.sh:/usr/local/bin/healthcheck.sh:ro
      - ./docker/mongodb/docker-entrypoint-wrapped.sh:/usr/local/bin/docker-entrypoint-wrapped.sh:ro
      - ./docker/mongodb/init.d:/docker-entrypoint-initdb.d/
      - ./docker/mongodb/post-init.d:/docker-entrypoint-post-initdb.d/
    ports:
      - ${EXPOSE_DB:+${DB_PORT:-27017}:27017}
    networks:
      - labtasker-network
    healthcheck:
      test: [ "CMD", "/usr/local/bin/healthcheck.sh" ]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: Dockerfile
      network: host
    image: ghcr.io/fkcptlst/labtasker-api
    container_name: labtasker-api
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME:-labtasker_db}
      - DB_HOST=mongodb
      - DB_PORT=${DB_PORT:-27017}
      - API_HOST=${API_HOST:-0.0.0.0}
      - API_PORT=${API_PORT:-8080}
      - PERIODIC_TASK_INTERVAL=${PERIODIC_TASK_INTERVAL:-30}
    ports:
      - "${API_PORT:-8080}:${API_PORT:-8080}"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - labtasker-network
    restart: unless-stopped

volumes:
  mongo-data:
    name: labtasker-mongo-data
  mongo-keyfile:
    name: labtasker-mongo-keyfile

networks:
  labtasker-network:
    name: labtasker-network
    driver: bridge
