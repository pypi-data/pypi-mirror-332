name: release
run-name: create release and image
on:
  push:
    tags:
      - "v*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  test:
    runs-on: ubuntu-24.04
    services:
      docker:
        image: docker:dind
        options: --privileged
        ports:
          - 2375:2375
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: run tests
        run: |
          sudo apt update
          sudo apt install -y linux-modules-extra-$(uname -r)
          sudo modprobe vrf
          docker build . -t aronet:test
          ./tests/run_tests.sh

  push-to-pypi:
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: pypi
      url: https://pypi.org/p/aronet
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install pypa/build
      run: |
        python3 -m pip install build --user
    - name: Install build dependencies
      run: |
        sudo apt update
        sudo apt install -y git gcc automake autoconf libtool pkg-config gettext perl gperf flex bison libssl-dev ninja-build libncurses-dev libreadline-dev
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Publish distribution ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
  create-release:
    name: Release pushed tag
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
    steps:
      - name: Create release
        env:
          tag: ${{ github.ref_name }}
        run: |
          git clone --depth=1 https://github.com/RMTT/aronet && \
          cd aronet && \
          git pull --tags && \
          gh release create "${tag}" \
              --title="${tag}" \
              --notes-from-tag
