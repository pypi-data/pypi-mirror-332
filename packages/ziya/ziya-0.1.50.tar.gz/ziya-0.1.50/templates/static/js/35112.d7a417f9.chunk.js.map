{"version":3,"file":"static/js/35112.d7a417f9.chunk.js","mappings":"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","sources":["components/ApplyDiffTest.tsx","../node_modules/antd/es/tag/style/index.js","../node_modules/antd/es/tag/CheckableTag.js","../node_modules/antd/es/tag/style/presetCmp.js","../node_modules/antd/es/tag/style/statusCmp.js","../node_modules/antd/es/_util/capitalize.js","../node_modules/antd/es/tag/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Table, Button, Space, Modal, Input, Tag, Tooltip, message, Select } from 'antd';\nimport { PlusOutlined, ReloadOutlined, SaveOutlined } from '@ant-design/icons';\nimport { useTheme } from '../context/ThemeContext';\n\ntype TestStatus = 'pending' | 'success' | 'failed';\n\ninterface TestCase {\n   id: string;\n   name: string;\n   description: string;\n   diff: string;\n   targetFile: string;\n   targetContent: string;\n   status: 'pending' | 'success' | 'failed';\n   error?: string;\n   lastRun?: string;\n   category: string;\n}\n\nconst ApplyDiffTest: React.FC = () => {\n   const [isLoading, setIsLoading] = useState(false);\n   const [testCases, setTestCases] = useState<TestCase[]>([]);\n   const [isModalVisible, setIsModalVisible] = useState(false);\n   const [currentTest, setCurrentTest] = useState<TestCase | null>(null);\n   const { isDarkMode } = useTheme();\n   const [categories, setCategories] = useState<string[]>([]);\n   const { TextArea } = Input;\n\n   useEffect(() => {\n       loadTestCases();\n   }, []);\n\n   const loadTestCases = async () => {\n       try {\n           // First, scan the testcases directory\n           const response = await fetch('/testcases');\n           const directories = await response.json();\n\n\t   setCategories(directories.filter(dir => !dir.startsWith('.')));\n\n           const loadedTests: TestCase[] = [];\n\n           // For each category directory\n           for (const category of directories) {\n               // Skip hidden directories and files\n               if (category.startsWith('.')) continue;\n\n               // Load all test cases in this category\n               const categoryResponse = await fetch(`/testcases/${category}`);\n               const testFiles = await categoryResponse.json();\n\n               // Look for pairs of .diff and .source files\n               const diffFiles = testFiles.filter(f => f.endsWith('.diff'));\n\n               for (const diffFile of diffFiles) {\n                   const baseName = diffFile.replace('.diff', '');\n                   const sourceFile = `${baseName}.source`;\n\n                   if (testFiles.includes(sourceFile)) {\n                       // Load the test case content\n                       const [diffContent, sourceContent] = await Promise.all([\n                           fetch(`/testcases/${category}/${diffFile}`).then(r => r.text()),\n                           fetch(`/testcases/${category}/${sourceFile}`).then(r => r.text())\n                       ]);\n\n                       loadedTests.push({\n                           id: `${category}-${baseName}`,\n                           name: baseName,\n                           description: `${category} - ${baseName}`,\n                           diff: diffContent,\n                           targetContent: sourceContent,\n                           targetFile: extractTargetFile(diffContent),\n                           status: 'pending',\n                           category\n                       });\n                   }\n               }\n           }\n\n           setTestCases(loadedTests);\n       } catch (error) {\n           console.error('Error loading test cases:', error);\n           message.error('Failed to load test cases');\n       }\n   };\n\n   const extractTargetFile = (diff: string): string => {\n        // Extract target file from diff header\n        const match = diff.match(/^\\+\\+\\+ b\\/(.*?)$/m);\n        return match ? match[1] : '';\n    };\n\n   const saveTestCases = (cases: TestCase[]) => {\n       try {\n           localStorage.setItem('ZIYA_DIFF_TEST_CASES', JSON.stringify(cases));\n           setTestCases(cases);\n       } catch (error) {\n\t   console.error('Error saving test cases:', error);\n       }\n   };\n\n   const addTestCase = () => {\n       setCurrentTest({\n           id: Date.now().toString(),\n           name: '',\n           description: '',\n           diff: '',\n           targetFile: '',\n           targetContent: '',\n            status: 'pending',\n            category: 'custom'  // Default category for manually added test cases\n       });\n       setIsModalVisible(true);\n   };\n\n   const handleSave = () => {\n       if (!currentTest) return;\n       \n       const newCases = currentTest.id \n           ? testCases.map(tc => tc.id === currentTest.id ? currentTest : tc)\n           : [...testCases, currentTest];\n           \n       saveTestCases(newCases);\n       setIsModalVisible(false);\n   };\n\n   const runTest = async (testCase: TestCase) => {\n       try {\n           const response = await fetch('/api/apply-changes', {\n               method: 'POST',\n               headers: { 'Content-Type': 'application/json' },\n               body: JSON.stringify({\n                   diff: testCase.diff,\n                   filePath: testCase.targetFile\n               }),\n           });\n\n           const updatedTest = {\n               ...testCase,\n               status: response.ok ? 'success' : 'failed',\n               error: response.ok ? undefined : await response.text(),\n               lastRun: new Date().toISOString()\n           };\n\n\t   // Get error text if response is not ok\n           const errorText = !response.ok ? await response.text() : undefined;\n\n           const newCases: TestCase[] = testCases.map(tc => tc.id === testCase.id\n               ? {\n                    ...tc,\n                    status: response.ok ? 'success' as const : 'failed' as const,\n\t\t    error: errorText,\n                    lastRun: new Date().toISOString()\n               } : tc );\n           \n           saveTestCases(newCases);\n           \n           message.info(`Test ${response.ok ? 'succeeded' : 'failed'}`);\n       } catch (error) {\n           const updatedTest = {\n               ...testCase,\n               status: 'failed',\n               error: error instanceof Error ? error.message : 'Unknown error',\n               lastRun: new Date().toISOString()\n           };\n           \n\t   const newCases: TestCase[] = testCases.map(tc =>\n\t       tc.id === testCase.id ? {\n                    ...tc,\n                    status: 'failed' as const,\n                    error: error instanceof Error ? error.message : 'Unknown error',\n                    lastRun: new Date().toISOString()\n                } : tc\n           );\n           \n           saveTestCases(newCases);\n           message.error('Test failed');\n       } finally {\n\t   setIsLoading(false);\n       }\n   };\n\n   const resetAllTests = () => {\n       const resetCases = testCases.map(tc => ({\n           ...tc,\n           status: 'pending' as const,\n           error: undefined,\n           lastRun: undefined\n       }));\n       saveTestCases(resetCases);\n       message.info('All tests reset');\n   };\n\n   const columns = [\n       {\n           title: 'Name',\n           dataIndex: 'name',\n           key: 'name',\n       },\n       {\n           title: 'Description',\n           dataIndex: 'description',\n           key: 'description',\n       },\n       {\n           title: 'Target File',\n           dataIndex: 'targetFile',\n           key: 'targetFile',\n       },\n       {\n           title: 'Status',\n           dataIndex: 'status',\n           key: 'status',\n           render: (status: string, record: TestCase) => (\n               <Tooltip title={record.error}>\n                   <Tag color={\n                       status === 'success' ? 'success' :\n                       status === 'failed' ? 'error' :\n                       'default'\n                   }>\n                       {status.toUpperCase()}\n                   </Tag>\n               </Tooltip>\n           ),\n       },\n       {\n           title: 'Last Run',\n           dataIndex: 'lastRun',\n           key: 'lastRun',\n           render: (date: string) => date ? new Date(date).toLocaleString() : '-'\n       },\n       {\n           title: 'Action',\n           key: 'action',\n           render: (_, record: TestCase) => (\n               <Space>\n                   <Button onClick={() => runTest(record)}>Run</Button>\n                   <Button onClick={() => {\n                       setCurrentTest(record);\n                       setIsModalVisible(true);\n                   }}>Edit</Button>\n               </Space>\n           ),\n       },\n   ];\n\n   return (\n       <Card title=\"Debug View: Apply Diff Test Cases\">\n       </Card>\n   );\n};\n\nexport default ApplyDiffTest;\n","import { unit } from '@ant-design/cssinjs';\nimport { TinyColor } from '@ctrl/tinycolor';\nimport { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\n// ============================== Styles ==============================\nconst genBaseStyle = token => {\n  const {\n    paddingXXS,\n    lineWidth,\n    tagPaddingHorizontal,\n    componentCls,\n    calc\n  } = token;\n  const paddingInline = calc(tagPaddingHorizontal).sub(lineWidth).equal();\n  const iconMarginInline = calc(paddingXXS).sub(lineWidth).equal();\n  return {\n    // Result\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-block',\n      height: 'auto',\n      // https://github.com/ant-design/ant-design/pull/47504\n      marginInlineEnd: token.marginXS,\n      paddingInline,\n      fontSize: token.tagFontSize,\n      lineHeight: token.tagLineHeight,\n      whiteSpace: 'nowrap',\n      background: token.defaultBg,\n      border: `${unit(token.lineWidth)} ${token.lineType} ${token.colorBorder}`,\n      borderRadius: token.borderRadiusSM,\n      opacity: 1,\n      transition: `all ${token.motionDurationMid}`,\n      textAlign: 'start',\n      position: 'relative',\n      // RTL\n      [`&${componentCls}-rtl`]: {\n        direction: 'rtl'\n      },\n      '&, a, a:hover': {\n        color: token.defaultColor\n      },\n      [`${componentCls}-close-icon`]: {\n        marginInlineStart: iconMarginInline,\n        fontSize: token.tagIconSize,\n        color: token.colorTextDescription,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationMid}`,\n        '&:hover': {\n          color: token.colorTextHeading\n        }\n      },\n      [`&${componentCls}-has-color`]: {\n        borderColor: 'transparent',\n        [`&, a, a:hover, ${token.iconCls}-close, ${token.iconCls}-close:hover`]: {\n          color: token.colorTextLightSolid\n        }\n      },\n      '&-checkable': {\n        backgroundColor: 'transparent',\n        borderColor: 'transparent',\n        cursor: 'pointer',\n        [`&:not(${componentCls}-checkable-checked):hover`]: {\n          color: token.colorPrimary,\n          backgroundColor: token.colorFillSecondary\n        },\n        '&:active, &-checked': {\n          color: token.colorTextLightSolid\n        },\n        '&-checked': {\n          backgroundColor: token.colorPrimary,\n          '&:hover': {\n            backgroundColor: token.colorPrimaryHover\n          }\n        },\n        '&:active': {\n          backgroundColor: token.colorPrimaryActive\n        }\n      },\n      '&-hidden': {\n        display: 'none'\n      },\n      // To ensure that a space will be placed between character and `Icon`.\n      [`> ${token.iconCls} + span, > span + ${token.iconCls}`]: {\n        marginInlineStart: paddingInline\n      }\n    }),\n    [`${componentCls}-borderless`]: {\n      borderColor: 'transparent',\n      background: token.tagBorderlessBg\n    }\n  };\n};\n// ============================== Export ==============================\nexport const prepareToken = token => {\n  const {\n    lineWidth,\n    fontSizeIcon,\n    calc\n  } = token;\n  const tagFontSize = token.fontSizeSM;\n  const tagToken = mergeToken(token, {\n    tagFontSize,\n    tagLineHeight: unit(calc(token.lineHeightSM).mul(tagFontSize).equal()),\n    tagIconSize: calc(fontSizeIcon).sub(calc(lineWidth).mul(2)).equal(),\n    // Tag icon is much smaller\n    tagPaddingHorizontal: 8,\n    // Fixed padding.\n    tagBorderlessBg: token.defaultBg\n  });\n  return tagToken;\n};\nexport const prepareComponentToken = token => ({\n  defaultBg: new TinyColor(token.colorFillQuaternary).onBackground(token.colorBgContainer).toHexString(),\n  defaultColor: token.colorText\n});\nexport default genStyleHooks('Tag', token => {\n  const tagToken = prepareToken(token);\n  return genBaseStyle(tagToken);\n}, prepareComponentToken);","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nconst CheckableTag = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      prefixCls: customizePrefixCls,\n      style,\n      className,\n      checked,\n      onChange,\n      onClick\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"style\", \"className\", \"checked\", \"onChange\", \"onClick\"]);\n  const {\n    getPrefixCls,\n    tag\n  } = React.useContext(ConfigContext);\n  const handleClick = e => {\n    onChange === null || onChange === void 0 ? void 0 : onChange(!checked);\n    onClick === null || onClick === void 0 ? void 0 : onClick(e);\n  };\n  const prefixCls = getPrefixCls('tag', customizePrefixCls);\n  // Style\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const cls = classNames(prefixCls, `${prefixCls}-checkable`, {\n    [`${prefixCls}-checkable-checked`]: checked\n  }, tag === null || tag === void 0 ? void 0 : tag.className, className, hashId, cssVarCls);\n  return wrapCSSVar(/*#__PURE__*/React.createElement(\"span\", Object.assign({}, restProps, {\n    ref: ref,\n    style: Object.assign(Object.assign({}, style), tag === null || tag === void 0 ? void 0 : tag.style),\n    className: cls,\n    onClick: handleClick\n  })));\n});\nexport default CheckableTag;","// Style as status component\nimport { prepareComponentToken, prepareToken } from '.';\nimport { genPresetColor, genSubStyleComponent } from '../../theme/internal';\n// ============================== Preset ==============================\nconst genPresetStyle = token => genPresetColor(token, (colorKey, _ref) => {\n  let {\n    textColor,\n    lightBorderColor,\n    lightColor,\n    darkColor\n  } = _ref;\n  return {\n    [`${token.componentCls}${token.componentCls}-${colorKey}`]: {\n      color: textColor,\n      background: lightColor,\n      borderColor: lightBorderColor,\n      // Inverse color\n      '&-inverse': {\n        color: token.colorTextLightSolid,\n        background: darkColor,\n        borderColor: darkColor\n      },\n      [`&${token.componentCls}-borderless`]: {\n        borderColor: 'transparent'\n      }\n    }\n  };\n});\n// ============================== Export ==============================\nexport default genSubStyleComponent(['Tag', 'preset'], token => {\n  const tagToken = prepareToken(token);\n  return genPresetStyle(tagToken);\n}, prepareComponentToken);","import { prepareComponentToken, prepareToken } from '.';\nimport capitalize from '../../_util/capitalize';\nimport { genSubStyleComponent } from '../../theme/internal';\nconst genTagStatusStyle = (token, status, cssVariableType) => {\n  const capitalizedCssVariableType = capitalize(cssVariableType);\n  return {\n    [`${token.componentCls}${token.componentCls}-${status}`]: {\n      color: token[`color${cssVariableType}`],\n      background: token[`color${capitalizedCssVariableType}Bg`],\n      borderColor: token[`color${capitalizedCssVariableType}Border`],\n      [`&${token.componentCls}-borderless`]: {\n        borderColor: 'transparent'\n      }\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genSubStyleComponent(['Tag', 'status'], token => {\n  const tagToken = prepareToken(token);\n  return [genTagStatusStyle(tagToken, 'success', 'Success'), genTagStatusStyle(tagToken, 'processing', 'Info'), genTagStatusStyle(tagToken, 'error', 'Error'), genTagStatusStyle(tagToken, 'warning', 'Warning')];\n}, prepareComponentToken);","export default function capitalize(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n  const ret = str.charAt(0).toUpperCase() + str.slice(1);\n  return ret;\n}","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport { isPresetColor, isPresetStatusColor } from '../_util/colors';\nimport useClosable, { pickClosable } from '../_util/hooks/useClosable';\nimport { replaceElement } from '../_util/reactNode';\nimport { devUseWarning } from '../_util/warning';\nimport Wave from '../_util/wave';\nimport { ConfigContext } from '../config-provider';\nimport CheckableTag from './CheckableTag';\nimport useStyle from './style';\nimport PresetCmp from './style/presetCmp';\nimport StatusCmp from './style/statusCmp';\nconst InternalTag = /*#__PURE__*/React.forwardRef((tagProps, ref) => {\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      rootClassName,\n      style,\n      children,\n      icon,\n      color,\n      onClose,\n      bordered = true,\n      visible: deprecatedVisible\n    } = tagProps,\n    props = __rest(tagProps, [\"prefixCls\", \"className\", \"rootClassName\", \"style\", \"children\", \"icon\", \"color\", \"onClose\", \"bordered\", \"visible\"]);\n  const {\n    getPrefixCls,\n    direction,\n    tag: tagContext\n  } = React.useContext(ConfigContext);\n  const [visible, setVisible] = React.useState(true);\n  const domProps = omit(props, ['closeIcon', 'closable']);\n  // Warning for deprecated usage\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Tag');\n    warning.deprecated(!('visible' in tagProps), 'visible', 'visible && <Tag />');\n  }\n  React.useEffect(() => {\n    if (deprecatedVisible !== undefined) {\n      setVisible(deprecatedVisible);\n    }\n  }, [deprecatedVisible]);\n  const isPreset = isPresetColor(color);\n  const isStatus = isPresetStatusColor(color);\n  const isInternalColor = isPreset || isStatus;\n  const tagStyle = Object.assign(Object.assign({\n    backgroundColor: color && !isInternalColor ? color : undefined\n  }, tagContext === null || tagContext === void 0 ? void 0 : tagContext.style), style);\n  const prefixCls = getPrefixCls('tag', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  // Style\n  const tagClassName = classNames(prefixCls, tagContext === null || tagContext === void 0 ? void 0 : tagContext.className, {\n    [`${prefixCls}-${color}`]: isInternalColor,\n    [`${prefixCls}-has-color`]: color && !isInternalColor,\n    [`${prefixCls}-hidden`]: !visible,\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-borderless`]: !bordered\n  }, className, rootClassName, hashId, cssVarCls);\n  const handleCloseClick = e => {\n    e.stopPropagation();\n    onClose === null || onClose === void 0 ? void 0 : onClose(e);\n    if (e.defaultPrevented) {\n      return;\n    }\n    setVisible(false);\n  };\n  const [, mergedCloseIcon] = useClosable(pickClosable(tagProps), pickClosable(tagContext), {\n    closable: false,\n    closeIconRender: iconNode => {\n      const replacement = /*#__PURE__*/React.createElement(\"span\", {\n        className: `${prefixCls}-close-icon`,\n        onClick: handleCloseClick\n      }, iconNode);\n      return replaceElement(iconNode, replacement, originProps => ({\n        onClick: e => {\n          var _a;\n          (_a = originProps === null || originProps === void 0 ? void 0 : originProps.onClick) === null || _a === void 0 ? void 0 : _a.call(originProps, e);\n          handleCloseClick(e);\n        },\n        className: classNames(originProps === null || originProps === void 0 ? void 0 : originProps.className, `${prefixCls}-close-icon`)\n      }));\n    }\n  });\n  const isNeedWave = typeof props.onClick === 'function' || children && children.type === 'a';\n  const iconNode = icon || null;\n  const kids = iconNode ? (/*#__PURE__*/React.createElement(React.Fragment, null, iconNode, children && /*#__PURE__*/React.createElement(\"span\", null, children))) : children;\n  const tagNode = /*#__PURE__*/React.createElement(\"span\", Object.assign({}, domProps, {\n    ref: ref,\n    className: tagClassName,\n    style: tagStyle\n  }), kids, mergedCloseIcon, isPreset && /*#__PURE__*/React.createElement(PresetCmp, {\n    key: \"preset\",\n    prefixCls: prefixCls\n  }), isStatus && /*#__PURE__*/React.createElement(StatusCmp, {\n    key: \"status\",\n    prefixCls: prefixCls\n  }));\n  return wrapCSSVar(isNeedWave ? /*#__PURE__*/React.createElement(Wave, {\n    component: \"Tag\"\n  }, tagNode) : tagNode);\n});\nconst Tag = InternalTag;\nif (process.env.NODE_ENV !== 'production') {\n  Tag.displayName = 'Tag';\n}\nTag.CheckableTag = CheckableTag;\nexport default Tag;"],"names":["ApplyDiffTest","isLoading","setIsLoading","useState","testCases","setTestCases","isModalVisible","setIsModalVisible","currentTest","setCurrentTest","isDarkMode","useTheme","categories","setCategories","TextArea","Input","useEffect","loadTestCases","async","response","fetch","directories","json","filter","dir","startsWith","loadedTests","category","categoryResponse","concat","testFiles","diffFiles","f","endsWith","diffFile","baseName","replace","sourceFile","includes","diffContent","sourceContent","Promise","all","then","r","text","push","id","name","description","diff","targetContent","targetFile","extractTargetFile","status","error","console","message","match","_jsx","Card","title","prepareToken","token","lineWidth","fontSizeIcon","calc","tagFontSize","fontSizeSM","mergeToken","tagLineHeight","unit","lineHeightSM","mul","equal","tagIconSize","sub","tagPaddingHorizontal","tagBorderlessBg","defaultBg","prepareComponentToken","TinyColor","colorFillQuaternary","onBackground","colorBgContainer","toHexString","defaultColor","colorText","genStyleHooks","paddingXXS","componentCls","paddingInline","iconMarginInline","Object","assign","resetComponent","display","height","marginInlineEnd","marginXS","fontSize","lineHeight","whiteSpace","background","border","lineType","colorBorder","borderRadius","borderRadiusSM","opacity","transition","motionDurationMid","textAlign","position","direction","color","marginInlineStart","colorTextDescription","cursor","colorTextHeading","borderColor","iconCls","colorTextLightSolid","backgroundColor","colorPrimary","colorFillSecondary","colorPrimaryHover","colorPrimaryActive","genBaseStyle","__rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","CheckableTag","React","props","ref","prefixCls","customizePrefixCls","style","className","checked","onChange","onClick","restProps","getPrefixCls","tag","ConfigContext","wrapCSSVar","hashId","cssVarCls","useStyle","cls","classNames","genSubStyleComponent","genPresetColor","colorKey","_ref","textColor","lightBorderColor","lightColor","darkColor","genPresetStyle","genTagStatusStyle","cssVariableType","capitalizedCssVariableType","str","charAt","toUpperCase","slice","tagToken","InternalTag","tagProps","rootClassName","children","icon","onClose","bordered","visible","deprecatedVisible","tagContext","setVisible","domProps","omit","undefined","isPreset","isPresetColor","isStatus","isPresetStatusColor","isInternalColor","tagStyle","tagClassName","handleCloseClick","stopPropagation","defaultPrevented","mergedCloseIcon","useClosable","pickClosable","closable","closeIconRender","iconNode","replacement","replaceElement","originProps","_a","isNeedWave","type","kids","tagNode","PresetCmp","key","StatusCmp","Wave","component","Tag"],"sourceRoot":""}