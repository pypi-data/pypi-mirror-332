name: Bump Version and Release

on:
  push:
    branches: [master]
    paths:
      - "src/**/*.py"
  workflow_dispatch:

jobs:
  test:
    uses: ./.github/workflows/test.yml

  bump-version:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write # For pushing tag, commit and creating release
      id-token: write # For trusted publishing to PyPI

    # Only run if push is from a human (not another workflow)
    if: github.actor != 'github-actions[bot]' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for bumpver

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - uses: extractions/setup-just@v2

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Bump version
        run: |
          just bump-version --tag-commit
          # Extract the new version
          NEW_VERSION=$(grep -m1 'current_version = ' pyproject.toml | cut -d'"' -f2)
          echo "PACKAGE_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Push changes and tag
        run: |
          git push
          git push origin ${{ env.PACKAGE_VERSION }}

      - name: Build package
        run: uv build

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          "${{ env.PACKAGE_VERSION }}"
          --repo "$GITHUB_REPOSITORY"
          --title "${{ env.PACKAGE_VERSION }}"
          --generate-notes
          dist/*

      - name: Publish to PyPI
        run: uv publish

