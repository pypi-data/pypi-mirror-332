name: Create and publish a Docker image - TAG

on:
  push:
    tags:
      - '*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            ${{ github.ref_name }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GITHUB_TOKEN=${{ secrets.KUBIYA_GITHUB_TOKEN }}

      # - name: Export Docker image
      #   run: |
      #     docker buildx imagetools create -t myimage:${{ github.ref_name }} ${{ steps.meta.outputs.tags }}
      #     docker save myimage:${{ github.ref_name }} -o /tmp/myimage.tar

      # - name: Upload artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: "sdk-py-multi-arch-${{ github.ref_name }}"
      #     path: /tmp/myimage.tar

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::564407622114:role/github-action-role

      - name: Update kubiya_versions.json
        run: |
          aws s3 cp s3://kubiya-cli/stable/kubiya_versions.json kubiya_versions.json || echo "{}" > kubiya_versions.json
          sed -i 's|"'"${{ env.REPO_NAME }}"'": *"[^"]*"|"'"${{ env.REPO_NAME }}"'": "'"${{ env.REGISTRY }}/kubiyabot/${{ env.REPO_NAME }}:${{ github.ref_name }}"'"|' kubiya_versions.json
          aws s3 cp kubiya_versions.json s3://kubiya-cli/stable/kubiya_versions.json --acl public-read
