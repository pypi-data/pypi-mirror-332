{"version":3,"file":"2999.52a37fd2296c4188.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/common/language/format_language.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-language-picker.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-selector/ha-selector-language.ts"],"sourcesContent":["import memoizeOne from \"memoize-one\";\nimport type { FrontendLocaleData } from \"../../data/translation\";\n\nexport const formatLanguageCode = (\n  languageCode: string,\n  locale: FrontendLocaleData\n) => {\n  try {\n    return formatLanguageCodeMem(locale)?.of(languageCode) ?? languageCode;\n  } catch {\n    return languageCode;\n  }\n};\n\nconst formatLanguageCodeMem = memoizeOne(\n  (locale: FrontendLocaleData) =>\n    new Intl.DisplayNames(locale.language, {\n      type: \"language\",\n      fallback: \"code\",\n    })\n);\n","import type { PropertyValues } from \"lit\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { stopPropagation } from \"../common/dom/stop_propagation\";\nimport { formatLanguageCode } from \"../common/language/format_language\";\nimport { caseInsensitiveStringCompare } from \"../common/string/compare\";\nimport type { FrontendLocaleData } from \"../data/translation\";\nimport { translationMetadata } from \"../resources/translations-metadata\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-list-item\";\nimport \"./ha-select\";\nimport type { HaSelect } from \"./ha-select\";\n\n@customElement(\"ha-language-picker\")\nexport class HaLanguagePicker extends LitElement {\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property({ type: Array }) public languages?: string[];\n\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ type: Boolean, reflect: true }) public disabled = false;\n\n  @property({ type: Boolean }) public required = false;\n\n  @property({ attribute: \"native-name\", type: Boolean })\n  public nativeName = false;\n\n  @property({ attribute: \"no-sort\", type: Boolean }) public noSort = false;\n\n  @property({ attribute: \"inline-arrow\", type: Boolean })\n  public inlineArrow = false;\n\n  @state() _defaultLanguages: string[] = [];\n\n  @query(\"ha-select\") private _select!: HaSelect;\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n    this._computeDefaultLanguageOptions();\n  }\n\n  protected updated(changedProperties: PropertyValues) {\n    super.updated(changedProperties);\n\n    const localeChanged =\n      changedProperties.has(\"hass\") &&\n      this.hass &&\n      changedProperties.get(\"hass\") &&\n      changedProperties.get(\"hass\").locale.language !==\n        this.hass.locale.language;\n    if (\n      changedProperties.has(\"languages\") ||\n      changedProperties.has(\"value\") ||\n      localeChanged\n    ) {\n      this._select.layoutOptions();\n      if (this._select.value !== this.value) {\n        fireEvent(this, \"value-changed\", { value: this._select.value });\n      }\n      if (!this.value) {\n        return;\n      }\n      const languageOptions = this._getLanguagesOptions(\n        this.languages ?? this._defaultLanguages,\n        this.nativeName,\n        this.hass?.locale\n      );\n      const selectedItemIndex = languageOptions.findIndex(\n        (option) => option.value === this.value\n      );\n      if (selectedItemIndex === -1) {\n        this.value = undefined;\n      }\n      if (localeChanged) {\n        this._select.select(selectedItemIndex);\n      }\n    }\n  }\n\n  private _getLanguagesOptions = memoizeOne(\n    (languages: string[], nativeName: boolean, locale?: FrontendLocaleData) => {\n      let options: { label: string; value: string }[] = [];\n\n      if (nativeName) {\n        const translations = translationMetadata.translations;\n        options = languages.map((lang) => {\n          let label = translations[lang]?.nativeName;\n          if (!label) {\n            try {\n              // this will not work if Intl.DisplayNames is polyfilled, it will return in the language of the user\n              label = new Intl.DisplayNames(lang, {\n                type: \"language\",\n                fallback: \"code\",\n              }).of(lang)!;\n            } catch (_err) {\n              label = lang;\n            }\n          }\n          return {\n            value: lang,\n            label,\n          };\n        });\n      } else if (locale) {\n        options = languages.map((lang) => ({\n          value: lang,\n          label: formatLanguageCode(lang, locale),\n        }));\n      }\n\n      if (!this.noSort && locale) {\n        options.sort((a, b) =>\n          caseInsensitiveStringCompare(a.label, b.label, locale.language)\n        );\n      }\n      return options;\n    }\n  );\n\n  private _computeDefaultLanguageOptions() {\n    this._defaultLanguages = Object.keys(translationMetadata.translations);\n  }\n\n  protected render() {\n    const languageOptions = this._getLanguagesOptions(\n      this.languages ?? this._defaultLanguages,\n      this.nativeName,\n      this.hass?.locale\n    );\n\n    const value =\n      this.value ?? (this.required ? languageOptions[0]?.value : this.value);\n\n    return html`\n      <ha-select\n        .label=${this.label ??\n        (this.hass?.localize(\"ui.components.language-picker.language\") ||\n          \"Language\")}\n        .value=${value || \"\"}\n        .required=${this.required}\n        .disabled=${this.disabled}\n        @selected=${this._changed}\n        @closed=${stopPropagation}\n        fixedMenuPosition\n        naturalMenuWidth\n        .inlineArrow=${this.inlineArrow}\n      >\n        ${languageOptions.length === 0\n          ? html`<ha-list-item value=\"\"\n              >${this.hass?.localize(\n                \"ui.components.language-picker.no_languages\"\n              ) || \"No languages\"}</ha-list-item\n            >`\n          : languageOptions.map(\n              (option) => html`\n                <ha-list-item .value=${option.value}\n                  >${option.label}</ha-list-item\n                >\n              `\n            )}\n      </ha-select>\n    `;\n  }\n\n  static styles = css`\n    ha-select {\n      width: 100%;\n    }\n  `;\n\n  private _changed(ev): void {\n    const target = ev.target as HaSelect;\n    if (target.value === \"\" || target.value === this.value) {\n      return;\n    }\n    this.value = target.value;\n    fireEvent(this, \"value-changed\", { value: this.value });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-language-picker\": HaLanguagePicker;\n  }\n}\n","import { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport type { LanguageSelector } from \"../../data/selector\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"../ha-language-picker\";\n\n@customElement(\"ha-selector-language\")\nexport class HaLanguageSelector extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public selector!: LanguageSelector;\n\n  @property() public value?: any;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = true;\n\n  protected render() {\n    return html`\n      <ha-language-picker\n        .hass=${this.hass}\n        .value=${this.value}\n        .label=${this.label}\n        .helper=${this.helper}\n        .languages=${this.selector.language?.languages}\n        .nativeName=${Boolean(this.selector?.language?.native_name)}\n        .noSort=${Boolean(this.selector?.language?.no_sort)}\n        .disabled=${this.disabled}\n        .required=${this.required}\n      ></ha-language-picker>\n    `;\n  }\n\n  static styles = css`\n    ha-language-picker {\n      width: 100%;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-language\": HaLanguageSelector;\n  }\n}\n"],"names":["formatLanguageCode","languageCode","locale","formatLanguageCodeMem","of","memoizeOne","Intl","DisplayNames","language","type","fallback","_decorate","customElement","_initialize","_LitElement","HaLanguagePicker","constructor","args","F","d","kind","decorators","property","key","value","Array","attribute","Boolean","reflect","state","query","changedProps","_superPropGet","this","_computeDefaultLanguageOptions","changedProperties","localeChanged","has","hass","get","_select","layoutOptions","fireEvent","selectedItemIndex","_getLanguagesOptions","languages","_defaultLanguages","nativeName","findIndex","option","undefined","select","options","translations","translationMetadata","map","lang","label","_err","noSort","sort","a","b","caseInsensitiveStringCompare","Object","keys","languageOptions","required","html","localize","disabled","_changed","stopPropagation","inlineArrow","length","static","css","ev","target","LitElement","HaLanguageSelector","helper","selector","native_name","no_sort"],"mappings":"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"}