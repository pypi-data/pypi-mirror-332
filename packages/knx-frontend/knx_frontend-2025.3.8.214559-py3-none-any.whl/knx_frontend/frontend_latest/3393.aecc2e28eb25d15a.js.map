{"version":3,"file":"3393.aecc2e28eb25d15a.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-password-field.ts","webpack://knx-frontend/./homeassistant-frontend/src/panels/config/application_credentials/dialog-add-application-credential.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/application_credential.ts"],"sourcesContent":["import type { TextAreaCharCounter } from \"@material/mwc-textfield/mwc-textfield-base\";\nimport { mdiEye, mdiEyeOff } from \"@mdi/js\";\nimport { LitElement, css, html } from \"lit\";\nimport {\n  customElement,\n  eventOptions,\n  property,\n  query,\n  state,\n} from \"lit/decorators\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-icon-button\";\nimport \"./ha-textfield\";\nimport type { HaTextField } from \"./ha-textfield\";\n\n@customElement(\"ha-password-field\")\nexport class HaPasswordField extends LitElement {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ type: Boolean }) public invalid?: boolean;\n\n  @property({ attribute: \"error-message\" }) public errorMessage?: string;\n\n  @property({ type: Boolean }) public icon = false;\n\n  // eslint-disable-next-line lit/attribute-names\n  @property({ type: Boolean }) public iconTrailing = false;\n\n  @property() public autocomplete?: string;\n\n  @property() public autocorrect?: string;\n\n  @property({ attribute: \"input-spellcheck\" })\n  public inputSpellcheck?: string;\n\n  @property({ type: String }) value = \"\";\n\n  @property({ type: String }) placeholder = \"\";\n\n  @property({ type: String }) label = \"\";\n\n  @property({ type: Boolean, reflect: true }) disabled = false;\n\n  @property({ type: Boolean }) required = false;\n\n  // eslint-disable-next-line lit/attribute-names\n  @property({ type: Number }) minLength = -1;\n\n  // eslint-disable-next-line lit/attribute-names\n  @property({ type: Number }) maxLength = -1;\n\n  @property({ type: Boolean, reflect: true }) outlined = false;\n\n  @property({ type: String }) helper = \"\";\n\n  // eslint-disable-next-line lit/attribute-names\n  @property({ type: Boolean }) validateOnInitialRender = false;\n\n  // eslint-disable-next-line lit/attribute-names\n  @property({ type: String }) validationMessage = \"\";\n\n  // eslint-disable-next-line lit/attribute-names\n  @property({ type: Boolean }) autoValidate = false;\n\n  @property({ type: String }) pattern = \"\";\n\n  @property({ type: Number }) size: number | null = null;\n\n  // eslint-disable-next-line lit/attribute-names\n  @property({ type: Boolean }) helperPersistent = false;\n\n  // eslint-disable-next-line lit/attribute-names\n  @property({ type: Boolean }) charCounter: boolean | TextAreaCharCounter =\n    false;\n\n  // eslint-disable-next-line lit/attribute-names\n  @property({ type: Boolean }) endAligned = false;\n\n  @property({ type: String }) prefix = \"\";\n\n  @property({ type: String }) suffix = \"\";\n\n  @property({ type: String }) name = \"\";\n\n  @property({ type: String, attribute: \"input-mode\" })\n  inputMode!: string;\n\n  // eslint-disable-next-line lit/attribute-names\n  @property({ type: Boolean }) readOnly = false;\n\n  // eslint-disable-next-line lit/no-native-attributes\n  @property({ attribute: false, type: String }) autocapitalize = \"\";\n\n  @state() private _unmaskedPassword = false;\n\n  @query(\"ha-textfield\") private _textField!: HaTextField;\n\n  protected render() {\n    return html`<ha-textfield\n        .invalid=${this.invalid}\n        .errorMessage=${this.errorMessage}\n        .icon=${this.icon}\n        .iconTrailing=${this.iconTrailing}\n        .autocomplete=${this.autocomplete}\n        .autocorrect=${this.autocorrect}\n        .inputSpellcheck=${this.inputSpellcheck}\n        .value=${this.value}\n        .placeholder=${this.placeholder}\n        .label=${this.label}\n        .disabled=${this.disabled}\n        .required=${this.required}\n        .minLength=${this.minLength}\n        .maxLength=${this.maxLength}\n        .outlined=${this.outlined}\n        .helper=${this.helper}\n        .validateOnInitialRender=${this.validateOnInitialRender}\n        .validationMessage=${this.validationMessage}\n        .autoValidate=${this.autoValidate}\n        .pattern=${this.pattern}\n        .size=${this.size}\n        .helperPersistent=${this.helperPersistent}\n        .charCounter=${this.charCounter}\n        .endAligned=${this.endAligned}\n        .prefix=${this.prefix}\n        .name=${this.name}\n        .inputMode=${this.inputMode}\n        .readOnly=${this.readOnly}\n        .autocapitalize=${this.autocapitalize}\n        .type=${this._unmaskedPassword ? \"text\" : \"password\"}\n        .suffix=${html`<div style=\"width: 24px\"></div>`}\n        @input=${this._handleInputEvent}\n        @change=${this._handleChangeEvent}\n      ></ha-textfield>\n      <ha-icon-button\n        toggles\n        .label=${this.hass?.localize(\n          this._unmaskedPassword\n            ? \"ui.components.selectors.text.hide_password\"\n            : \"ui.components.selectors.text.show_password\"\n        ) || (this._unmaskedPassword ? \"Hide password\" : \"Show password\")}\n        @click=${this._toggleUnmaskedPassword}\n        .path=${this._unmaskedPassword ? mdiEyeOff : mdiEye}\n      ></ha-icon-button>`;\n  }\n\n  public focus(): void {\n    this._textField.focus();\n  }\n\n  public checkValidity(): boolean {\n    return this._textField.checkValidity();\n  }\n\n  public reportValidity(): boolean {\n    return this._textField.reportValidity();\n  }\n\n  public setCustomValidity(message: string): void {\n    return this._textField.setCustomValidity(message);\n  }\n\n  public layout(): Promise<void> {\n    return this._textField.layout();\n  }\n\n  private _toggleUnmaskedPassword(): void {\n    this._unmaskedPassword = !this._unmaskedPassword;\n  }\n\n  @eventOptions({ passive: true })\n  private _handleInputEvent(ev) {\n    this.value = ev.target.value;\n  }\n\n  @eventOptions({ passive: true })\n  private _handleChangeEvent(ev) {\n    this.value = ev.target.value;\n    this._reDispatchEvent(ev);\n  }\n\n  private _reDispatchEvent(oldEvent: Event) {\n    const newEvent = new Event(oldEvent.type, oldEvent);\n    this.dispatchEvent(newEvent);\n  }\n\n  static styles = css`\n    :host {\n      display: block;\n      position: relative;\n    }\n    ha-textfield {\n      width: 100%;\n    }\n    ha-icon-button {\n      position: absolute;\n      top: 8px;\n      right: 8px;\n      inset-inline-start: initial;\n      inset-inline-end: 8px;\n      --mdc-icon-button-size: 40px;\n      --mdc-icon-size: 20px;\n      color: var(--secondary-text-color);\n      direction: var(--direction);\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-password-field\": HaPasswordField;\n  }\n}\n","import \"@material/mwc-list/mwc-list-item\";\nimport { mdiOpenInNew } from \"@mdi/js\";\nimport type { ComboBoxLitRenderer } from \"@vaadin/combo-box/lit\";\nimport type { CSSResultGroup } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport \"../../../components/ha-alert\";\nimport \"../../../components/ha-button\";\nimport \"../../../components/ha-circular-progress\";\nimport \"../../../components/ha-combo-box\";\nimport { createCloseHeading } from \"../../../components/ha-dialog\";\nimport \"../../../components/ha-markdown\";\nimport \"../../../components/ha-password-field\";\nimport \"../../../components/ha-textfield\";\nimport type {\n  ApplicationCredential,\n  ApplicationCredentialsConfig,\n} from \"../../../data/application_credential\";\nimport {\n  createApplicationCredential,\n  fetchApplicationCredentialsConfig,\n} from \"../../../data/application_credential\";\nimport type { IntegrationManifest } from \"../../../data/integration\";\nimport { domainToName } from \"../../../data/integration\";\nimport { haStyleDialog } from \"../../../resources/styles\";\nimport type { HomeAssistant } from \"../../../types\";\nimport { documentationUrl } from \"../../../util/documentation-url\";\nimport type { AddApplicationCredentialDialogParams } from \"./show-dialog-add-application-credential\";\n\ninterface Domain {\n  id: string;\n  name: string;\n}\n\nconst rowRenderer: ComboBoxLitRenderer<Domain> = (item) =>\n  html`<mwc-list-item>\n    <span>${item.name}</span>\n  </mwc-list-item>`;\n\n@customElement(\"dialog-add-application-credential\")\nexport class DialogAddApplicationCredential extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _loading = false;\n\n  // Error message when can't talk to server etc\n  @state() private _error?: string;\n\n  @state() private _params?: AddApplicationCredentialDialogParams;\n\n  @state() private _domain?: string;\n\n  @state() private _manifest?: IntegrationManifest | null;\n\n  @state() private _name?: string;\n\n  @state() private _description?: string;\n\n  @state() private _clientId?: string;\n\n  @state() private _clientSecret?: string;\n\n  @state() private _domains?: Domain[];\n\n  @state() private _config?: ApplicationCredentialsConfig;\n\n  public showDialog(params: AddApplicationCredentialDialogParams) {\n    this._params = params;\n    this._domain = params.selectedDomain;\n    this._manifest = params.manifest;\n    this._name = \"\";\n    this._description = \"\";\n    this._clientId = \"\";\n    this._clientSecret = \"\";\n    this._error = undefined;\n    this._loading = false;\n    this._fetchConfig();\n  }\n\n  private async _fetchConfig() {\n    this._config = await fetchApplicationCredentialsConfig(this.hass);\n    this._domains = Object.keys(this._config.integrations).map((domain) => ({\n      id: domain,\n      name: domainToName(this.hass.localize, domain),\n    }));\n    await this.hass.loadBackendTranslation(\"application_credentials\");\n    this._updateDescription();\n  }\n\n  protected render() {\n    if (!this._params || !this._domains) {\n      return nothing;\n    }\n    const selectedDomainName = this._params.selectedDomain\n      ? domainToName(this.hass.localize, this._domain!)\n      : \"\";\n    return html`\n      <ha-dialog\n        open\n        @closed=${this._abortDialog}\n        scrimClickAction\n        escapeKeyAction\n        .heading=${createCloseHeading(\n          this.hass,\n          this.hass.localize(\n            \"ui.panel.config.application_credentials.editor.caption\"\n          )\n        )}\n      >\n        <div>\n          ${this._error\n            ? html`<ha-alert alert-type=\"error\">${this._error}</ha-alert> `\n            : \"\"}\n          ${this._params.selectedDomain && !this._description\n            ? html`<p>\n                ${this.hass.localize(\n                  \"ui.panel.config.application_credentials.editor.missing_credentials\",\n                  {\n                    integration: selectedDomainName,\n                  }\n                )}\n                ${this._manifest?.is_built_in || this._manifest?.documentation\n                  ? html`<a\n                      href=${this._manifest.is_built_in\n                        ? documentationUrl(\n                            this.hass,\n                            `/integrations/${this._domain}`\n                          )\n                        : this._manifest.documentation}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      ${this.hass.localize(\n                        \"ui.panel.config.application_credentials.editor.missing_credentials_domain_link\",\n                        {\n                          integration: selectedDomainName,\n                        }\n                      )}\n                      <ha-svg-icon .path=${mdiOpenInNew}></ha-svg-icon>\n                    </a>`\n                  : \"\"}\n              </p>`\n            : \"\"}\n          ${!this._params.selectedDomain || !this._description\n            ? html`<p>\n                ${this.hass.localize(\n                  \"ui.panel.config.application_credentials.editor.description\"\n                )}\n                <a\n                  href=${documentationUrl(\n                    this.hass!,\n                    \"/integrations/application_credentials\"\n                  )}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  ${this.hass!.localize(\n                    \"ui.panel.config.application_credentials.editor.view_documentation\"\n                  )}\n                  <ha-svg-icon .path=${mdiOpenInNew}></ha-svg-icon>\n                </a>\n              </p>`\n            : \"\"}\n          ${this._params.selectedDomain\n            ? \"\"\n            : html`<ha-combo-box\n                name=\"domain\"\n                .hass=${this.hass}\n                .label=${this.hass.localize(\n                  \"ui.panel.config.application_credentials.editor.domain\"\n                )}\n                .value=${this._domain}\n                .renderer=${rowRenderer}\n                .items=${this._domains}\n                item-id-path=\"id\"\n                item-value-path=\"id\"\n                item-label-path=\"name\"\n                required\n                @value-changed=${this._handleDomainPicked}\n              ></ha-combo-box>`}\n          ${this._description\n            ? html`<ha-markdown\n                breaks\n                .content=${this._description}\n              ></ha-markdown>`\n            : \"\"}\n          <ha-textfield\n            class=\"name\"\n            name=\"name\"\n            .label=${this.hass.localize(\n              \"ui.panel.config.application_credentials.editor.name\"\n            )}\n            .value=${this._name}\n            required\n            @input=${this._handleValueChanged}\n            .validationMessage=${this.hass.localize(\"ui.common.error_required\")}\n            dialogInitialFocus\n          ></ha-textfield>\n          <ha-textfield\n            class=\"clientId\"\n            name=\"clientId\"\n            .label=${this.hass.localize(\n              \"ui.panel.config.application_credentials.editor.client_id\"\n            )}\n            .value=${this._clientId}\n            required\n            @input=${this._handleValueChanged}\n            .validationMessage=${this.hass.localize(\"ui.common.error_required\")}\n            dialogInitialFocus\n            .helper=${this.hass.localize(\n              \"ui.panel.config.application_credentials.editor.client_id_helper\"\n            )}\n            helperPersistent\n          ></ha-textfield>\n          <ha-password-field\n            .label=${this.hass.localize(\n              \"ui.panel.config.application_credentials.editor.client_secret\"\n            )}\n            name=\"clientSecret\"\n            .value=${this._clientSecret}\n            required\n            @input=${this._handleValueChanged}\n            .validationMessage=${this.hass.localize(\"ui.common.error_required\")}\n            .helper=${this.hass.localize(\n              \"ui.panel.config.application_credentials.editor.client_secret_helper\"\n            )}\n            helperPersistent\n          ></ha-password-field>\n        </div>\n        ${this._loading\n          ? html`\n              <div slot=\"primaryAction\" class=\"submit-spinner\">\n                <ha-circular-progress indeterminate></ha-circular-progress>\n              </div>\n            `\n          : html`\n              <ha-button slot=\"secondaryAction\" @click=${this._abortDialog}>\n                ${this.hass.localize(\"ui.common.cancel\")}\n              </ha-button>\n              <ha-button\n                slot=\"primaryAction\"\n                .disabled=${!this._domain ||\n                !this._clientId ||\n                !this._clientSecret}\n                @click=${this._addApplicationCredential}\n              >\n                ${this.hass.localize(\n                  \"ui.panel.config.application_credentials.editor.add\"\n                )}\n              </ha-button>\n            `}\n      </ha-dialog>\n    `;\n  }\n\n  public closeDialog() {\n    this._params = undefined;\n    this._domains = undefined;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  private _handleDomainPicked(ev: CustomEvent) {\n    ev.stopPropagation();\n    this._domain = ev.detail.value;\n    this._updateDescription();\n  }\n\n  private async _updateDescription() {\n    if (!this._domain) {\n      return;\n    }\n\n    await this.hass.loadBackendTranslation(\n      \"application_credentials\",\n      this._domain\n    );\n    const info = this._config!.integrations[this._domain];\n    this._description = this.hass.localize(\n      `component.${this._domain}.application_credentials.description`,\n      info.description_placeholders\n    );\n  }\n\n  private _handleValueChanged(ev: CustomEvent) {\n    this._error = undefined;\n    const name = (ev.target as any).name;\n    const value = (ev.target as any).value;\n    this[`_${name}`] = value;\n  }\n\n  private _abortDialog() {\n    if (this._params && this._params.dialogAbortedCallback) {\n      this._params.dialogAbortedCallback();\n    }\n    this.closeDialog();\n  }\n\n  private async _addApplicationCredential(ev) {\n    ev.preventDefault();\n    if (!this._domain || !this._clientId || !this._clientSecret) {\n      return;\n    }\n\n    this._loading = true;\n    this._error = \"\";\n\n    let applicationCredential: ApplicationCredential;\n    try {\n      applicationCredential = await createApplicationCredential(\n        this.hass,\n        this._domain,\n        this._clientId,\n        this._clientSecret,\n        this._name\n      );\n    } catch (err: any) {\n      this._loading = false;\n      this._error = err.message;\n      return;\n    }\n    this._params!.applicationCredentialAddedCallback(applicationCredential);\n    this.closeDialog();\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyleDialog,\n      css`\n        ha-dialog {\n          --mdc-dialog-max-width: 500px;\n          --dialog-z-index: 10;\n        }\n        .row {\n          display: flex;\n          padding: 8px 0;\n        }\n        ha-combo-box {\n          display: block;\n          margin-bottom: 24px;\n        }\n        ha-textfield {\n          display: block;\n          margin-bottom: 24px;\n        }\n        a {\n          text-decoration: none;\n        }\n        a ha-svg-icon {\n          --mdc-icon-size: 16px;\n        }\n        ha-markdown {\n          margin-bottom: 16px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-add-application-credential\": DialogAddApplicationCredential;\n  }\n}\n","import type { HomeAssistant } from \"../types\";\n\nexport interface ApplicationCredentialsDomainConfig {\n  description_placeholders: Record<string, string>;\n}\n\nexport interface ApplicationCredentialsConfig {\n  integrations: Record<string, ApplicationCredentialsDomainConfig>;\n}\n\nexport interface ApplicationCredentialsConfigEntry {\n  application_credentials_id?: string;\n}\n\nexport interface ApplicationCredential {\n  id: string;\n  domain: string;\n  client_id: string;\n  client_secret: string;\n  name: string;\n}\n\nexport const fetchApplicationCredentialsConfig = async (hass: HomeAssistant) =>\n  hass.callWS<ApplicationCredentialsConfig>({\n    type: \"application_credentials/config\",\n  });\n\nexport const fetchApplicationCredentialsConfigEntry = async (\n  hass: HomeAssistant,\n  configEntryId: string\n) =>\n  hass.callWS<ApplicationCredentialsConfigEntry>({\n    type: \"application_credentials/config_entry\",\n    config_entry_id: configEntryId,\n  });\n\nexport const fetchApplicationCredentials = async (hass: HomeAssistant) =>\n  hass.callWS<ApplicationCredential[]>({\n    type: \"application_credentials/list\",\n  });\n\nexport const createApplicationCredential = async (\n  hass: HomeAssistant,\n  domain: string,\n  clientId: string,\n  clientSecret: string,\n  name?: string\n) =>\n  hass.callWS<ApplicationCredential>({\n    type: \"application_credentials/create\",\n    domain,\n    client_id: clientId,\n    client_secret: clientSecret,\n    name,\n  });\n\nexport const deleteApplicationCredential = async (\n  hass: HomeAssistant,\n  applicationCredentialsId: string\n) =>\n  hass.callWS<undefined>({\n    type: \"application_credentials/delete\",\n    application_credentials_id: applicationCredentialsId,\n  });\n"],"names":["_decorate","customElement","_initialize","_LitElement","F","constructor","args","d","kind","decorators","property","attribute","key","value","type","Boolean","String","reflect","Number","state","query","html","this","invalid","errorMessage","icon","iconTrailing","autocomplete","autocorrect","inputSpellcheck","placeholder","label","disabled","required","minLength","maxLength","outlined","helper","validateOnInitialRender","validationMessage","autoValidate","pattern","size","helperPersistent","charCounter","endAligned","prefix","name","inputMode","readOnly","autocapitalize","_unmaskedPassword","_handleInputEvent","_handleChangeEvent","hass","localize","_toggleUnmaskedPassword","_textField","focus","checkValidity","reportValidity","message","setCustomValidity","layout","eventOptions","passive","ev","target","_reDispatchEvent","oldEvent","newEvent","Event","dispatchEvent","static","css","LitElement","mdiOpenInNew","rowRenderer","item","DialogAddApplicationCredential","params","_params","_domain","selectedDomain","_manifest","manifest","_name","_description","_clientId","_clientSecret","_error","undefined","_loading","_fetchConfig","_config","async","callWS","fetchApplicationCredentialsConfig","_domains","Object","keys","integrations","map","domain","id","domainToName","loadBackendTranslation","_updateDescription","nothing","selectedDomainName","_abortDialog","createCloseHeading","integration","is_built_in","documentation","documentationUrl","_handleDomainPicked","_handleValueChanged","_addApplicationCredential","fireEvent","dialog","localName","stopPropagation","detail","info","description_placeholders","dialogAbortedCallback","closeDialog","preventDefault","applicationCredential","clientId","clientSecret","client_id","client_secret","createApplicationCredential","err","applicationCredentialAddedCallback","haStyleDialog"],"mappings":"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"}