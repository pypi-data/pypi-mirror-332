{"version":3,"file":"8963.9842666726eeb1c0.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/common/translations/blank_before_percent.ts","webpack://knx-frontend/./homeassistant-frontend/src/util/bytes-to-string.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-file-upload.ts","webpack://knx-frontend/./homeassistant-frontend/src/dialogs/image-cropper-dialog/show-image-cropper-dialog.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-picture-upload.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/media-player/show-media-browser-dialog.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/image_upload.ts"],"sourcesContent":["import type { FrontendLocaleData } from \"../../data/translation\";\n\n// Logic based on https://en.wikipedia.org/wiki/Percent_sign#Form_and_spacing\nexport const blankBeforePercent = (\n  localeOptions: FrontendLocaleData\n): string => {\n  switch (localeOptions.language) {\n    case \"cs\":\n    case \"de\":\n    case \"fi\":\n    case \"fr\":\n    case \"sk\":\n    case \"sv\":\n      return \" \";\n    default:\n      return \"\";\n  }\n};\n","export const bytesToString = (value = 0, decimals = 2): string => {\n  if (value === 0) {\n    return \"0 Bytes\";\n  }\n  const k = 1024;\n  decimals = decimals < 0 ? 0 : decimals;\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n  const i = Math.floor(Math.log(value) / Math.log(k));\n  return `${parseFloat((value / k ** i).toFixed(decimals))} ${sizes[i]}`;\n};\n","import \"@material/mwc-linear-progress/mwc-linear-progress\";\nimport { mdiDelete, mdiFileUpload } from \"@mdi/js\";\nimport type { PropertyValues, TemplateResult } from \"lit\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-button\";\nimport \"./ha-icon-button\";\nimport { blankBeforePercent } from \"../common/translations/blank_before_percent\";\nimport { ensureArray } from \"../common/array/ensure-array\";\nimport { bytesToString } from \"../util/bytes-to-string\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"file-picked\": { files: File[] };\n    \"files-cleared\": undefined;\n  }\n}\n\n@customElement(\"ha-file-upload\")\nexport class HaFileUpload extends LitElement {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property() public accept!: string;\n\n  @property() public icon?: string;\n\n  @property() public label?: string;\n\n  @property() public secondary?: string;\n\n  @property() public supports?: string;\n\n  @property({ type: Object }) public value?: File | File[] | FileList | string;\n\n  @property({ type: Boolean }) public multiple = false;\n\n  @property({ type: Boolean, reflect: true }) public disabled = false;\n\n  @property({ type: Boolean }) public uploading = false;\n\n  @property({ type: Number }) public progress?: number;\n\n  @property({ type: Boolean, attribute: \"auto-open-file-dialog\" })\n  public autoOpenFileDialog = false;\n\n  @state() private _drag = false;\n\n  @query(\"#input\") private _input?: HTMLInputElement;\n\n  protected firstUpdated(changedProperties: PropertyValues) {\n    super.firstUpdated(changedProperties);\n    if (this.autoOpenFileDialog) {\n      this._openFilePicker();\n    }\n  }\n\n  private get _name() {\n    if (this.value === undefined) {\n      return \"\";\n    }\n    if (typeof this.value === \"string\") {\n      return this.value;\n    }\n    const files =\n      this.value instanceof FileList\n        ? Array.from(this.value)\n        : ensureArray(this.value);\n\n    return files.map((file) => file.name).join(\", \");\n  }\n\n  public render(): TemplateResult {\n    return html`\n      ${this.uploading\n        ? html`<div class=\"container\">\n            <div class=\"uploading\">\n              <span class=\"header\"\n                >${this.value\n                  ? this.hass?.localize(\n                      \"ui.components.file-upload.uploading_name\",\n                      { name: this._name }\n                    )\n                  : this.hass?.localize(\n                      \"ui.components.file-upload.uploading\"\n                    )}</span\n              >\n              ${this.progress\n                ? html`<div class=\"progress\">\n                    ${this.progress}${blankBeforePercent(this.hass!.locale)}%\n                  </div>`\n                : nothing}\n            </div>\n            <mwc-linear-progress\n              .indeterminate=${!this.progress}\n              .progress=${this.progress ? this.progress / 100 : undefined}\n            ></mwc-linear-progress>\n          </div>`\n        : html`<label\n            for=${this.value ? \"\" : \"input\"}\n            class=\"container ${classMap({\n              dragged: this._drag,\n              multiple: this.multiple,\n              value: Boolean(this.value),\n            })}\"\n            @drop=${this._handleDrop}\n            @dragenter=${this._handleDragStart}\n            @dragover=${this._handleDragStart}\n            @dragleave=${this._handleDragEnd}\n            @dragend=${this._handleDragEnd}\n            >${!this.value\n              ? html`<ha-svg-icon\n                    class=\"big-icon\"\n                    .path=${this.icon || mdiFileUpload}\n                  ></ha-svg-icon>\n                  <ha-button unelevated @click=${this._openFilePicker}>\n                    ${this.label ||\n                    this.hass?.localize(\"ui.components.file-upload.label\")}\n                  </ha-button>\n                  <span class=\"secondary\"\n                    >${this.secondary ||\n                    this.hass?.localize(\n                      \"ui.components.file-upload.secondary\"\n                    )}</span\n                  >\n                  <span class=\"supports\">${this.supports}</span>`\n              : typeof this.value === \"string\"\n                ? html`<div class=\"row\">\n                    <div class=\"value\" @click=${this._openFilePicker}>\n                      <ha-svg-icon\n                        .path=${this.icon || mdiFileUpload}\n                      ></ha-svg-icon>\n                      ${this.value}\n                    </div>\n                    <ha-icon-button\n                      @click=${this._clearValue}\n                      .label=${this.hass?.localize(\"ui.common.delete\") ||\n                      \"Delete\"}\n                      .path=${mdiDelete}\n                    ></ha-icon-button>\n                  </div>`\n                : (this.value instanceof FileList\n                    ? Array.from(this.value)\n                    : ensureArray(this.value)\n                  ).map(\n                    (file) =>\n                      html`<div class=\"row\">\n                        <div class=\"value\" @click=${this._openFilePicker}>\n                          <ha-svg-icon\n                            .path=${this.icon || mdiFileUpload}\n                          ></ha-svg-icon>\n                          ${file.name} - ${bytesToString(file.size)}\n                        </div>\n                        <ha-icon-button\n                          @click=${this._clearValue}\n                          .label=${this.hass?.localize(\"ui.common.delete\") ||\n                          \"Delete\"}\n                          .path=${mdiDelete}\n                        ></ha-icon-button>\n                      </div>`\n                  )}\n            <input\n              id=\"input\"\n              type=\"file\"\n              class=\"file\"\n              .accept=${this.accept}\n              .multiple=${this.multiple}\n              @change=${this._handleFilePicked}\n          /></label>`}\n    `;\n  }\n\n  private _openFilePicker() {\n    this._input?.click();\n  }\n\n  private _handleDrop(ev: DragEvent) {\n    ev.preventDefault();\n    ev.stopPropagation();\n    if (ev.dataTransfer?.files) {\n      fireEvent(this, \"file-picked\", {\n        files:\n          this.multiple || ev.dataTransfer.files.length === 1\n            ? Array.from(ev.dataTransfer.files)\n            : [ev.dataTransfer.files[0]],\n      });\n    }\n    this._drag = false;\n  }\n\n  private _handleDragStart(ev: DragEvent) {\n    ev.preventDefault();\n    ev.stopPropagation();\n    this._drag = true;\n  }\n\n  private _handleDragEnd(ev: DragEvent) {\n    ev.preventDefault();\n    ev.stopPropagation();\n    this._drag = false;\n  }\n\n  private _handleFilePicked(ev) {\n    if (ev.target.files.length === 0) {\n      return;\n    }\n    this.value = ev.target.files;\n    fireEvent(this, \"file-picked\", { files: ev.target.files });\n  }\n\n  private _clearValue(ev: Event) {\n    ev.preventDefault();\n    this._input!.value = \"\";\n    this.value = undefined;\n    fireEvent(this, \"change\");\n    fireEvent(this, \"files-cleared\");\n  }\n\n  static styles = css`\n    :host {\n      display: block;\n      height: 240px;\n    }\n    :host([disabled]) {\n      pointer-events: none;\n      color: var(--disabled-text-color);\n    }\n    .container {\n      position: relative;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      border: solid 1px\n        var(--mdc-text-field-idle-line-color, rgba(0, 0, 0, 0.42));\n      border-radius: var(--mdc-shape-small, 4px);\n      height: 100%;\n    }\n    label.container {\n      border: dashed 1px\n        var(--mdc-text-field-idle-line-color, rgba(0, 0, 0, 0.42));\n      cursor: pointer;\n    }\n    .container .uploading {\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n      align-items: flex-start;\n      padding: 0 32px;\n      box-sizing: border-box;\n    }\n    :host([disabled]) .container {\n      border-color: var(--disabled-color);\n    }\n    label:hover,\n    label.dragged {\n      border-style: solid;\n    }\n    label.dragged {\n      border-color: var(--primary-color);\n    }\n    .dragged:before {\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      background-color: var(--primary-color);\n      content: \"\";\n      opacity: var(--dark-divider-opacity);\n      pointer-events: none;\n      border-radius: var(--mdc-shape-small, 4px);\n    }\n    label.value {\n      cursor: default;\n    }\n    label.value.multiple {\n      justify-content: unset;\n      overflow: auto;\n    }\n    .highlight {\n      color: var(--primary-color);\n    }\n    ha-button {\n      margin-bottom: 4px;\n    }\n    .supports {\n      color: var(--secondary-text-color);\n      font-size: 12px;\n    }\n    :host([disabled]) .secondary {\n      color: var(--disabled-text-color);\n    }\n    input.file {\n      display: none;\n    }\n    .value {\n      cursor: pointer;\n    }\n    .value ha-svg-icon {\n      margin-right: 8px;\n      margin-inline-end: 8px;\n      margin-inline-start: initial;\n    }\n    .big-icon {\n      --mdc-icon-size: 48px;\n      margin-bottom: 8px;\n    }\n    ha-button {\n      --mdc-button-outline-color: var(--primary-color);\n      --mdc-icon-button-size: 24px;\n    }\n    mwc-linear-progress {\n      width: 100%;\n      padding: 8px 32px;\n      box-sizing: border-box;\n    }\n    .header {\n      font-weight: 500;\n    }\n    .progress {\n      color: var(--secondary-text-color);\n    }\n    button.link {\n      background: none;\n      border: none;\n      padding: 0;\n      font-size: 14px;\n      color: var(--primary-color);\n      text-decoration: underline;\n      cursor: pointer;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-file-upload\": HaFileUpload;\n  }\n}\n","import { fireEvent } from \"../../common/dom/fire_event\";\n\nexport interface CropOptions {\n  round: boolean;\n  type?: \"image/jpeg\" | \"image/png\";\n  quality?: number;\n  aspectRatio?: number;\n}\n\nexport interface HaImageCropperDialogParams {\n  file: File;\n  options: CropOptions;\n  croppedCallback: (file: File) => void;\n}\n\nconst loadImageCropperDialog = () => import(\"./image-cropper-dialog\");\n\nexport const showImageCropperDialog = (\n  element: HTMLElement,\n  dialogParams: HaImageCropperDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"image-cropper-dialog\",\n    dialogImport: loadImageCropperDialog,\n    dialogParams,\n  });\n};\n","import { mdiImagePlus } from \"@mdi/js\";\nimport type { TemplateResult } from \"lit\";\nimport { LitElement, css, html } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport type { MediaPickedEvent } from \"../data/media-player\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { haStyle } from \"../resources/styles\";\nimport {\n  MEDIA_PREFIX,\n  getIdFromUrl,\n  createImage,\n  generateImageThumbnailUrl,\n  getImageData,\n} from \"../data/image_upload\";\nimport { showAlertDialog } from \"../dialogs/generic/show-dialog-box\";\nimport type { CropOptions } from \"../dialogs/image-cropper-dialog/show-image-cropper-dialog\";\nimport { showImageCropperDialog } from \"../dialogs/image-cropper-dialog/show-image-cropper-dialog\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-button\";\nimport \"./ha-circular-progress\";\nimport \"./ha-file-upload\";\nimport { showMediaBrowserDialog } from \"./media-player/show-media-browser-dialog\";\n\n@customElement(\"ha-picture-upload\")\nexport class HaPictureUpload extends LitElement {\n  public hass!: HomeAssistant;\n\n  @property() public value: string | null = null;\n\n  @property() public label?: string;\n\n  @property() public secondary?: string;\n\n  @property() public supports?: string;\n\n  @property({ attribute: false }) public currentImageAltText?: string;\n\n  @property({ type: Boolean }) public crop = false;\n\n  @property({ type: Boolean, attribute: \"select-media\" }) public selectMedia =\n    false;\n\n  @property({ attribute: false }) public cropOptions?: CropOptions;\n\n  @property({ type: Boolean }) public original = false;\n\n  @property({ type: Number }) public size = 512;\n\n  @state() private _uploading = false;\n\n  public render(): TemplateResult {\n    if (!this.value) {\n      const secondary =\n        this.secondary ||\n        (this.selectMedia\n          ? html`${this.hass.localize(\n              \"ui.components.picture-upload.secondary\",\n              {\n                select_media: html`<button\n                  class=\"link\"\n                  @click=${this._chooseMedia}\n                >\n                  ${this.hass.localize(\n                    \"ui.components.picture-upload.select_media\"\n                  )}\n                </button>`,\n              }\n            )}`\n          : undefined);\n\n      return html`\n        <ha-file-upload\n          .hass=${this.hass}\n          .icon=${mdiImagePlus}\n          .label=${this.label ||\n          this.hass.localize(\"ui.components.picture-upload.label\")}\n          .secondary=${secondary}\n          .supports=${this.supports ||\n          this.hass.localize(\"ui.components.picture-upload.supported_formats\")}\n          .uploading=${this._uploading}\n          @file-picked=${this._handleFilePicked}\n          @change=${this._handleFileCleared}\n          accept=\"image/png, image/jpeg, image/gif\"\n        ></ha-file-upload>\n      `;\n    }\n    return html`<div class=\"center-vertical\">\n      <div class=\"value\">\n        <img\n          .src=${this.value}\n          alt=${this.currentImageAltText ||\n          this.hass.localize(\"ui.components.picture-upload.current_image_alt\")}\n        />\n        <div>\n          <ha-button\n            @click=${this._handleChangeClick}\n            .label=${this.hass.localize(\n              \"ui.components.picture-upload.clear_picture\"\n            )}\n          >\n          </ha-button>\n        </div>\n      </div>\n    </div>`;\n  }\n\n  private _handleChangeClick() {\n    this.value = null;\n    fireEvent(this, \"change\");\n  }\n\n  private async _handleFilePicked(ev) {\n    const file = ev.detail.files[0];\n    if (this.crop) {\n      this._cropFile(file);\n    } else {\n      this._uploadFile(file);\n    }\n  }\n\n  private async _handleFileCleared() {\n    this.value = null;\n  }\n\n  private async _cropFile(file: File, mediaId?: string) {\n    if (![\"image/png\", \"image/jpeg\", \"image/gif\"].includes(file.type)) {\n      showAlertDialog(this, {\n        text: this.hass.localize(\n          \"ui.components.picture-upload.unsupported_format\"\n        ),\n      });\n      return;\n    }\n    showImageCropperDialog(this, {\n      file,\n      options: this.cropOptions || {\n        round: false,\n        aspectRatio: NaN,\n      },\n      croppedCallback: (croppedFile) => {\n        if (mediaId && croppedFile === file) {\n          this.value = generateImageThumbnailUrl(\n            mediaId,\n            this.size,\n            this.original\n          );\n          fireEvent(this, \"change\");\n        } else {\n          this._uploadFile(croppedFile);\n        }\n      },\n    });\n  }\n\n  private async _uploadFile(file: File) {\n    if (![\"image/png\", \"image/jpeg\", \"image/gif\"].includes(file.type)) {\n      showAlertDialog(this, {\n        text: this.hass.localize(\n          \"ui.components.picture-upload.unsupported_format\"\n        ),\n      });\n      return;\n    }\n    this._uploading = true;\n    try {\n      const media = await createImage(this.hass, file);\n      this.value = generateImageThumbnailUrl(\n        media.id,\n        this.size,\n        this.original\n      );\n      fireEvent(this, \"change\");\n    } catch (err: any) {\n      showAlertDialog(this, {\n        text: err.toString(),\n      });\n    } finally {\n      this._uploading = false;\n    }\n  }\n\n  private _chooseMedia = () => {\n    showMediaBrowserDialog(this, {\n      action: \"pick\",\n      entityId: \"browser\",\n      navigateIds: [\n        { media_content_id: undefined, media_content_type: undefined },\n        {\n          media_content_id: MEDIA_PREFIX,\n          media_content_type: \"app\",\n        },\n      ],\n      minimumNavigateLevel: 2,\n      mediaPickedCallback: async (pickedMedia: MediaPickedEvent) => {\n        const mediaId = getIdFromUrl(pickedMedia.item.media_content_id);\n        if (mediaId) {\n          if (this.crop) {\n            const url = generateImageThumbnailUrl(mediaId, undefined, true);\n            let data;\n            try {\n              data = await getImageData(url);\n            } catch (err: any) {\n              showAlertDialog(this, {\n                text: err.toString(),\n              });\n              return;\n            }\n            const metadata = {\n              type: pickedMedia.item.media_content_type,\n            };\n            const file = new File([data], pickedMedia.item.title, metadata);\n            this._cropFile(file, mediaId);\n          } else {\n            this.value = generateImageThumbnailUrl(\n              mediaId,\n              this.size,\n              this.original\n            );\n            fireEvent(this, \"change\");\n          }\n        }\n      },\n    });\n  };\n\n  static get styles() {\n    return [\n      haStyle,\n      css`\n        :host {\n          display: block;\n          height: 240px;\n        }\n        ha-file-upload {\n          height: 100%;\n        }\n        .center-vertical {\n          display: flex;\n          align-items: center;\n          height: 100%;\n        }\n        .value {\n          width: 100%;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n        }\n        img {\n          max-width: 100%;\n          max-height: 200px;\n          margin-bottom: 4px;\n          border-radius: var(--file-upload-image-border-radius);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-picture-upload\": HaPictureUpload;\n  }\n}\n","import { fireEvent } from \"../../common/dom/fire_event\";\nimport type {\n  MediaPickedEvent,\n  MediaPlayerBrowseAction,\n} from \"../../data/media-player\";\nimport type { MediaPlayerItemId } from \"./ha-media-player-browse\";\n\nexport interface MediaPlayerBrowseDialogParams {\n  action: MediaPlayerBrowseAction;\n  entityId: string;\n  mediaPickedCallback: (pickedMedia: MediaPickedEvent) => void;\n  navigateIds?: MediaPlayerItemId[];\n  minimumNavigateLevel?: number;\n}\n\nexport const showMediaBrowserDialog = (\n  element: HTMLElement,\n  dialogParams: MediaPlayerBrowseDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-media-player-browse\",\n    dialogImport: () => import(\"./dialog-media-player-browse\"),\n    dialogParams,\n  });\n};\n","import type { HomeAssistant } from \"../types\";\n\ninterface Image {\n  filesize: number;\n  name: string;\n  uploaded_at: string; // isoformat date\n  content_type: string;\n  id: string;\n}\n\nexport const URL_PREFIX = \"/api/image/serve/\";\nexport const MEDIA_PREFIX = \"media-source://image_upload\";\n\nexport interface ImageMutableParams {\n  name: string;\n}\n\nexport const getIdFromUrl = (url: string): string | undefined => {\n  let id;\n  if (url.startsWith(URL_PREFIX)) {\n    id = url.substring(URL_PREFIX.length);\n    const idx = id.indexOf(\"/\");\n    if (idx >= 0) {\n      id = id.substring(0, idx);\n    }\n  } else if (url.startsWith(MEDIA_PREFIX)) {\n    id = url.substring(MEDIA_PREFIX.length + 1);\n  }\n  return id;\n};\n\nexport const generateImageThumbnailUrl = (\n  mediaId: string,\n  size?: number,\n  original = false\n) => {\n  if (!original && !size) {\n    throw new Error(\"Size must be provided if original is false\");\n  }\n\n  return original\n    ? `/api/image/serve/${mediaId}/original`\n    : `/api/image/serve/${mediaId}/${size}x${size}`;\n};\n\nexport const fetchImages = (hass: HomeAssistant) =>\n  hass.callWS<Image[]>({ type: \"image/list\" });\n\nexport const createImage = async (\n  hass: HomeAssistant,\n  file: File\n): Promise<Image> => {\n  const fd = new FormData();\n  fd.append(\"file\", file);\n  const resp = await hass.fetchWithAuth(\"/api/image/upload\", {\n    method: \"POST\",\n    body: fd,\n  });\n  if (resp.status === 413) {\n    throw new Error(`Uploaded image is too large (${file.name})`);\n  } else if (resp.status !== 200) {\n    throw new Error(\"Unknown error\");\n  }\n  return resp.json();\n};\n\nexport const updateImage = (\n  hass: HomeAssistant,\n  id: string,\n  updates: Partial<ImageMutableParams>\n) =>\n  hass.callWS<Image>({\n    type: \"image/update\",\n    media_id: id,\n    ...updates,\n  });\n\nexport const deleteImage = (hass: HomeAssistant, id: string) =>\n  hass.callWS({\n    type: \"image/delete\",\n    image_id: id,\n  });\n\nexport const getImageData = async (url: string) => {\n  const response = await fetch(url);\n\n  if (!response.ok) {\n    throw new Error(\n      `Failed to fetch image: ${\n        response.statusText ? response.statusText : response.status\n      }`\n    );\n  }\n\n  return response.blob();\n};\n"],"names":["blankBeforePercent","localeOptions","language","mdiDelete","mdiFileUpload","_decorate","customElement","_initialize","_LitElement","HaFileUpload","constructor","args","F","d","kind","decorators","property","attribute","key","value","type","Object","Boolean","reflect","Number","state","query","changedProperties","_superPropGet","this","autoOpenFileDialog","_openFilePicker","undefined","FileList","Array","from","ensureArray","map","file","name","join","html","uploading","hass","localize","_name","progress","locale","nothing","classMap","dragged","_drag","multiple","_handleDrop","_handleDragStart","_handleDragEnd","icon","_clearValue","bytesToString","decimals","i","Math","floor","log","parseFloat","toFixed","size","label","secondary","supports","accept","_handleFilePicked","_input","click","ev","preventDefault","stopPropagation","dataTransfer","files","fireEvent","length","target","static","css","LitElement","loadImageCropperDialog","selectMedia","select_media","_chooseMedia","_uploading","_handleFileCleared","currentImageAltText","_handleChangeClick","detail","crop","_cropFile","_uploadFile","mediaId","showImageCropperDialog","element","dialogParams","includes","options","cropOptions","round","aspectRatio","NaN","croppedCallback","croppedFile","generateImageThumbnailUrl","original","dialogTag","dialogImport","showAlertDialog","text","media","createImage","id","err","toString","showMediaBrowserDialog","action","entityId","navigateIds","media_content_id","media_content_type","MEDIA_PREFIX","minimumNavigateLevel","mediaPickedCallback","async","getIdFromUrl","pickedMedia","item","url","data","getImageData","metadata","File","title","haStyle","URL_PREFIX","startsWith","substring","idx","indexOf","Error","fd","FormData","append","resp","fetchWithAuth","method","body","status","json","deleteImage","callWS","image_id","response","fetch","ok","statusText","blob"],"mappings":"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"}