[project]
name = "memexllm"
version = "0.1.0"
description = "A library for managing LLM conversation history"
authors = [
    {name = "Ali Nabipour", email = "alinabipour01@gmail.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dynamic = ["dependencies"]

[project.optional-dependencies]
sqlite = ["aiosqlite>=0.19.0"]

[project.urls]
repository = "https://github.com/eyenpi/memexllm"

[tool.poetry]
packages = [{include = "memexllm", from = "src"}]

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^2.0.0"
typing-extensions = "^4.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
black = "^25.1.0"
isort = "^6.0.0"
mypy = "1.15.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.23.0"
aiosqlite = "^0.19.0"

[tool.poetry.group.openai.dependencies]
openai = "^1.63.0"

[tool.poetry.group.sqlite]
optional = true

[tool.poetry.group.sqlite.dependencies]
aiosqlite = "^0.19.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "--cov=memexllm --cov-report=xml --cov-report=term-missing"
testpaths = ["tests"]
markers = [
    "integration: marks tests as integration tests",
]
python_files = "test_*.py"

[tool.black]
line-length = 88
target-version = ['py310']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
exclude = ["examples/.*"]