[build-system]
requires = ["hatchling", "packaging<23.2"]
build-backend = "hatchling.build"

[project]
name = "repurp"
version = "0.2.0"
requires-python = ">=3.8"
description = "Repurpose videos for various social media platforms with optimized settings"

readme = "README.md"
license = { text = "MIT" }
keywords = ["repurpose video", "social media videos", "ffmpeg reformat video", "instagram video", "tiktok video", "twitter video"]
authors = [
    { name = "Chukwuma Nwaugha", email = "chuks@veedo.ai" }
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",  
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Environment :: GPU",
    "Environment :: Web Environment",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Multimedia :: Video"
]
dependencies = []

[dependency-groups]
dev = [
    "pre-commit",
    "ruff",
    "mypy",
    "pyinstaller>=6.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0"
]

[project.urls]
Homepage = "https://github.com/nwaughachukwuma/repurp"
Repository = "https://github.com/nwaughachukwuma/repurp"
Issues = "https://github.com/nwaughachukwuma/repurp/issues"

[tool.hatch.build]
include = [
    "src/**/*.py",
    "LICENSE",
    "README.md"
]

[tool.hatch.build.targets.wheel]
packages = ["src/repurp"]

[tool.hatch.build.targets.sdist]
include = ["src/repurp"]

[project.scripts]
repurp = "repurp.use_cli:main"

[tool.ruff]
line-length = 120
include = ["*.py", "*.pyi", "**/pyproject.toml"]

[tool.ruff.lint]
select = ["D102", "F401"]

[tool.ruff.lint.isort]
case-sensitive = true
relative-imports-order = "closest-to-furthest"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pylint]
max-line-length = 120

[tool.mypy]
ignore_missing_imports = false

[tool.pytest.ini_options]
norecursedirs = ".* venv src site-packages"
addopts = "-v -s --durations=10 --strict-markers --cov=repurp --cov-report=html --cov-report=xml --cov-report=term-missing"
testpaths = ["tests"]
pythonpath = ["src"]
python_files = ["test_*.py"]
filterwarnings = ["ignore::DeprecationWarning:pkg_resources.*", "ignore::DeprecationWarning:urllib3.*"]

[tool.coverage.run]
branch = true
source = ["repurp"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "pass",
]
show_missing = true
