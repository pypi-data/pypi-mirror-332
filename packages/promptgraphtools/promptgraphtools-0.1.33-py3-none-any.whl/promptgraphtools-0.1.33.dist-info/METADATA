Metadata-Version: 2.4
Name: promptgraphtools
Version: 0.1.33
Summary: A lightweight, highly concurrent execution graph framework.
Project-URL: Homepage, https://github.com/tucker-weed/prompt-graph-tools
Author-email: Tucker Weed <tuckerweed@gmail.com>
License: The MIT License (MIT)
        
        Copyright (c) 2025 Tucker Weed
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in
        all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
        THE SOFTWARE.
License-File: LICENSE
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.6
Requires-Dist: google-genai==0.2.2
Requires-Dist: jinja2
Description-Content-Type: text/markdown

# promptgraphtools

A lightweight, highly concurrent execution graph framework.

1. For development, build a virtual env with: `python3 -m venv env`
2. Activate the env with the relevant activation command for your OS.
3. Run: `pip3 install -r requirements.txt`

Build distribution archives: `rm -rf dist/ && python3 -m build`

Test Locally: `python3 -m pip install <path-to-this-project-dir>`
Upload: `python3 -m twine upload dist/*`

# NOTE:

This software is currently experimental and should not be used in a production context.

